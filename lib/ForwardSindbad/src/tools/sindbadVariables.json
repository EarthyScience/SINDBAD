{
    "PET__Tair_prev": {
      "standard_name": "Tair_prev",
      "long_name": "Tair prev",
      "units": "degC",
      "sindbad_field": "PET",
      "description": "air temperature in the previous time step"
    },
    "WUE__AoE": {
      "standard_name": "AoE",
      "long_name": "AoE",
      "units": "gC/mmH2O",
      "sindbad_field": "WUE",
      "description": "water use efficiency of the ecosystem"
    },
    "WUE__AoENoCO2": {
      "standard_name": "AoENoCO2",
      "long_name": "AoENoCO2",
      "units": "gC/mmH2O",
      "sindbad_field": "WUE",
      "description": "water use efficiency of the ecosystem without CO2 effect"
    },
    "autoRespirationAirT__auto_respiration_f_airT": {
      "standard_name": "auto_respiration_f_airT",
      "long_name": "auto respiration f airT",
      "units": "-",
      "sindbad_field": "autoRespirationAirT",
      "description": "effect of air temperature on auto_respiration. 1: no stress, 0: complete stress"
    },
    "autoRespiration__k_respiration_maintain": {
      "standard_name": "k_respiration_maintain",
      "long_name": "k_maintenance_respiration",
      "units": "/time",
      "sindbad_field": "autoRespiration",
      "description": "metabolism rate for maintenance respiration"
    },
    "autoRespiration__k_respiration_maintain_su": {
      "standard_name": "k_respiration_maintain_su",
      "long_name": "k_maintenance_respiration_spinup",
      "units": "/time",
      "sindbad_field": "autoRespiration",
      "description": "metabolism rate for maintenance respiration to be used in old analytical solution to steady state"
    },
    "cAllocationLAI__c_allocation_f_LAI": {
      "standard_name": "c_allocation_f_LAI",
      "long_name": "LAI_effect_carbon_allocation",
      "units": "-",
      "sindbad_field": "cAllocationLAI",
      "description": "effect of LAI on c_allocation. 1: no stress, 0: complete stress"
    },
    "cAllocationNutrients__c_allocation_f_W_N": {
      "standard_name": "c_allocation_f_W_N",
      "long_name": "W_N_effect_carbon_allocation",
      "units": "-",
      "sindbad_field": "cAllocationNutrients",
      "description": "effect of water and nutrient on c_allocation. 1: no stress, 0: complete stress"
    },
    "cAllocationRadiation__c_allocation_f_cloud": {
      "standard_name": "c_allocation_f_cloud",
      "long_name": "c allocation f cloud",
      "units": "-",
      "sindbad_field": "cAllocationRadiation",
      "description": "effect of cloud on c_allocation. 1: no stress, 0: complete stress"
    },
    "cAllocationSoilT__c_allocation_f_soilT": {
      "standard_name": "c_allocation_f_soilT",
      "long_name": "c allocation f soilT",
      "units": "-",
      "sindbad_field": "cAllocationSoilT",
      "description": "effect of soil temperature on c_allocation. 1: no stress, 0: complete stress"
    },
    "cAllocationSoilW__c_allocation_f_soilW": {
      "standard_name": "c_allocation_f_soilW",
      "long_name": "c allocation f soilW",
      "units": "-",
      "sindbad_field": "cAllocationSoilW",
      "description": "effect of soil moisture on c_allocation. 1: no stress, 0: complete stress"
    },
    "cAllocationTreeFraction__cVeg_names_for_c_allocation_frac_tree": {
      "standard_name": "cVeg_names_for_c_allocation_frac_tree",
      "long_name": "cVeg names for c allocation frac tree",
      "units": "string",
      "sindbad_field": "cAllocationTreeFraction",
      "description": "name of vegetation carbon pools used in tree fraction correction for carbon allocation"
    },
    "cAllocation__cVeg_names": {
      "standard_name": "cVeg_names",
      "long_name": "cVeg names",
      "units": "string",
      "sindbad_field": "cAllocation",
      "description": "name of vegetation carbon pools used for carbon allocation"
    },
    "cAllocation__cVeg_nzix": {
      "standard_name": "cVeg_nzix",
      "long_name": "cVeg nzix",
      "units": "number",
      "sindbad_field": "cAllocation",
      "description": "number of pools/layers in each vegetation carbon component"
    },
    "cAllocation__cVeg_zix": {
      "standard_name": "cVeg_zix",
      "long_name": "cVeg zix",
      "units": "number",
      "sindbad_field": "cAllocation",
      "description": "number of pools/layers in each vegetation carbon component"
    },
    "cAllocation__c_allocation_to_veg": {
      "standard_name": "c_allocation_to_veg",
      "long_name": "c allocation to veg",
      "units": "fraction",
      "sindbad_field": "cAllocation",
      "description": "carbon allocation to each vvegetation pool"
    },
    "cCycleBase__C_to_N_cVeg": {
      "standard_name": "C_to_N_cVeg",
      "long_name": "C to N cVeg",
      "units": "ratio",
      "sindbad_field": "cCycleBase",
      "description": "carbon to nitrogen ratio in the vegetation pools"
    },
    "cCycleBase__c_eco_k_base": {
      "standard_name": "c_eco_k_base",
      "long_name": "c eco k base",
      "units": "/time",
      "sindbad_field": "cCycleBase",
      "description": "base carbon decomposition rate of the carbon pools"
    },
    "cCycleBase__c_flow_A_array": {
      "standard_name": "c_flow_A_array",
      "long_name": "c flow A array",
      "units": "fraction",
      "sindbad_field": "cCycleBase",
      "description": "an array indicating the flow direction and connections across different pools, with elements larger than 0 indicating flow from column pool to row pool"
    },
    "cCycleBase__c_flow_order": {
      "standard_name": "c_flow_order",
      "long_name": "c flow order",
      "units": "number",
      "sindbad_field": "cCycleBase",
      "description": "order of pooling while calculating the carbon flow"
    },
    "cCycleBase__c_giver": {
      "standard_name": "c_giver",
      "long_name": "c giver",
      "units": "number",
      "sindbad_field": "cCycleBase",
      "description": "index of the source carbon pool for a given flow"
    },
    "cCycleBase__c_model": {
      "standard_name": "c_model",
      "long_name": "c model",
      "units": "symbol",
      "sindbad_field": "cCycleBase",
      "description": "a base carbon cycle model to loop through the pools and fill the main or component pools needed for using static arrays. A mandatory field for every carbon model realization"
    },
    "cCycleBase__c_remain": {
      "standard_name": "c_remain",
      "long_name": "c remain",
      "units": "gC/m2",
      "sindbad_field": "cCycleBase",
      "description": "amount of carbon to keep in the ecosystem vegetation pools in case of disturbances"
    },
    "cCycleBase__c_taker": {
      "standard_name": "c_taker",
      "long_name": "c taker",
      "units": "number",
      "sindbad_field": "cCycleBase",
      "description": "index of the source carbon pool for a given flow"
    },
    "cCycleBase__c_τ_eco": {
      "standard_name": "c_τ_eco",
      "long_name": "c τ eco",
      "units": "years",
      "sindbad_field": "cCycleBase",
      "description": "number of years needed for carbon turnover per carbon pool"
    },
    "cCycleBase__ηA": {
      "standard_name": "ηA",
      "long_name": "ηA",
      "units": "number",
      "sindbad_field": "cCycleBase",
      "description": "scalar of autotrophic carbon pool for steady state guess"
    },
    "cCycleBase__ηH": {
      "standard_name": "ηH",
      "long_name": "ηH",
      "units": "number",
      "sindbad_field": "cCycleBase",
      "description": "scalar of heterotrophic carbon pool for steady state guess"
    },
    "cCycleConsistency__giver_lower_indices": {
      "standard_name": "giver_lower_indices",
      "long_name": "giver lower indices",
      "units": "number",
      "sindbad_field": "cCycleConsistency",
      "description": "indices of carbon pools whose flow is >0 below the diagonal in carbon flow matrix"
    },
    "cCycleConsistency__giver_lower_unique": {
      "standard_name": "giver_lower_unique",
      "long_name": "giver lower unique",
      "units": "number",
      "sindbad_field": "cCycleConsistency",
      "description": "unique indices of carbon pools whose flow is >0 below the diagonal in carbon flow matrix"
    },
    "cCycleConsistency__giver_upper_indices": {
      "standard_name": "giver_upper_indices",
      "long_name": "giver upper indices",
      "units": "number",
      "sindbad_field": "cCycleConsistency",
      "description": "indices of carbon pools whose flow is >0 above the diagonal in carbon flow matrix"
    },
    "cCycleConsistency__giver_upper_unique": {
      "standard_name": "giver_upper_unique",
      "long_name": "giver upper unique",
      "units": "number",
      "sindbad_field": "cCycleConsistency",
      "description": "unique indices of carbon pools whose flow is >0 above the diagonal in carbon flow matrix"
    },
    "cCycleDisturbance__c_lose_to_zix_vec": {
      "standard_name": "c_lose_to_zix_vec",
      "long_name": "c lose to zix vec",
      "units": null,
      "sindbad_field": "cCycleDisturbance",
      "description": null
    },
    "cCycleDisturbance__zix_veg_all": {
      "standard_name": "zix_veg_all",
      "long_name": "zix veg all",
      "units": null,
      "sindbad_field": "cCycleDisturbance",
      "description": null
    },
    "cFlowSoilProperties__p_E_vec": {
      "standard_name": "p_E_vec",
      "long_name": "p E vec",
      "units": null,
      "sindbad_field": "cFlowSoilProperties",
      "description": null
    },
    "cFlowSoilProperties__p_F_vec": {
      "standard_name": "p_F_vec",
      "long_name": "p F vec",
      "units": null,
      "sindbad_field": "cFlowSoilProperties",
      "description": null
    },
    "cFlowVegProperties__p_E_vec": {
      "standard_name": "p_E_vec",
      "long_name": "p E vec",
      "units": null,
      "sindbad_field": "cFlowVegProperties",
      "description": "carbon flow efficiency"
    },
    "cFlowVegProperties__p_F_vec": {
      "standard_name": "p_F_vec",
      "long_name": "p F vec",
      "units": "fraction",
      "sindbad_field": "cFlowVegProperties",
      "description": "carbon flow efficiency fraction"
    },
    "cFlow__aSrc": {
      "standard_name": "aSrc",
      "long_name": "aSrc",
      "units": "string",
      "sindbad_field": "cFlow",
      "description": "name of the source pool for the carbon flow"
    },
    "cFlow__aTrg": {
      "standard_name": "aTrg",
      "long_name": "aTrg",
      "units": "string",
      "sindbad_field": "cFlow",
      "description": "name of the target pool for carbon flow"
    },
    "cFlow__c_flow_A_vec_ind": {
      "standard_name": "c_flow_A_vec_ind",
      "long_name": "c flow A vec ind",
      "units": "number",
      "sindbad_field": "cFlow",
      "description": "indices of flow from giver to taker for carbon flow vector"
    },
    "cFlow__eco_stressor": {
      "standard_name": "eco_stressor",
      "long_name": "eco stressor",
      "units": "-",
      "sindbad_field": "cFlow",
      "description": "ecosystem stress on carbon flow"
    },
    "cFlow__eco_stressor_prev": {
      "standard_name": "eco_stressor_prev",
      "long_name": "eco stressor prev",
      "units": "-",
      "sindbad_field": "cFlow",
      "description": "ecosystem stress on carbon flow in the previous time step"
    },
    "cFlow__k_shedding_leaf": {
      "standard_name": "k_shedding_leaf",
      "long_name": "k shedding leaf",
      "units": "/time",
      "sindbad_field": "cFlow",
      "description": "loss rate of carbon flow from leaf to litter"
    },
    "cFlow__k_shedding_leaf_frac": {
      "standard_name": "k_shedding_leaf_frac",
      "long_name": "k shedding leaf frac",
      "units": "-",
      "sindbad_field": "cFlow",
      "description": "fraction of carbon loss from leaf that flows to litter pool"
    },
    "cFlow__k_shedding_root": {
      "standard_name": "k_shedding_root",
      "long_name": "k shedding root",
      "units": "/time",
      "sindbad_field": "cFlow",
      "description": "loss rate of carbon flow from root to litter"
    },
    "cFlow__k_shedding_root_frac": {
      "standard_name": "k_shedding_root_frac",
      "long_name": "k shedding root frac",
      "units": "-",
      "sindbad_field": "cFlow",
      "description": "fraction of carbon loss from root that flows to litter pool"
    },
    "cFlow__leaf_to_reserve": {
      "standard_name": "leaf_to_reserve",
      "long_name": "leaf to reserve",
      "units": "/time",
      "sindbad_field": "cFlow",
      "description": "loss rate of carbon flow from leaf to reserve"
    },
    "cFlow__leaf_to_reserve_frac": {
      "standard_name": "leaf_to_reserve_frac",
      "long_name": "leaf to reserve frac",
      "units": "-",
      "sindbad_field": "cFlow",
      "description": "fraction of carbon loss from leaf that flows to leaf"
    },
    "cFlow__reserve_to_leaf": {
      "standard_name": "reserve_to_leaf",
      "long_name": "reserve to leaf",
      "units": "/time",
      "sindbad_field": "cFlow",
      "description": "loss rate of carbon flow from reserve to root"
    },
    "cFlow__reserve_to_leaf_frac": {
      "standard_name": "reserve_to_leaf_frac",
      "long_name": "reserve to leaf frac",
      "units": "-",
      "sindbad_field": "cFlow",
      "description": "fraction of carbon loss from reserve that flows to leaf"
    },
    "cFlow__reserve_to_root": {
      "standard_name": "reserve_to_root",
      "long_name": "reserve to root",
      "units": "/time",
      "sindbad_field": "cFlow",
      "description": "loss rate of carbon flow from reserve to root"
    },
    "cFlow__reserve_to_root_frac": {
      "standard_name": "reserve_to_root_frac",
      "long_name": "reserve to root frac",
      "units": "-",
      "sindbad_field": "cFlow",
      "description": "fraction of carbon loss from reserve that flows to root"
    },
    "cFlow__root_to_reserve": {
      "standard_name": "root_to_reserve",
      "long_name": "root to reserve",
      "units": "/time",
      "sindbad_field": "cFlow",
      "description": "loss rate of carbon flow from root to reserve"
    },
    "cFlow__root_to_reserve_frac": {
      "standard_name": "root_to_reserve_frac",
      "long_name": "root to reserve frac",
      "units": "-",
      "sindbad_field": "cFlow",
      "description": "fraction of carbon loss from root that flows to reserve"
    },
    "cFlow__slope_eco_stressor": {
      "standard_name": "slope_eco_stressor",
      "long_name": "slope eco stressor",
      "units": "/time",
      "sindbad_field": "cFlow",
      "description": "potential rate of change in ecosystem stress on carbon flow"
    },
    "cTauLAI__c_eco_k_f_LAI": {
      "standard_name": "c_eco_k_f_LAI",
      "long_name": "c eco k f LAI",
      "units": "-",
      "sindbad_field": "cTauLAI",
      "description": "effect of LAI on carbon decomposition rate. 1: no stress, 0: complete stress"
    },
    "cTauSoilProperties__c_eco_k_f_soil_props": {
      "standard_name": "c_eco_k_f_soil_props",
      "long_name": "c eco k f soil props",
      "units": "-",
      "sindbad_field": "cTauSoilProperties",
      "description": "effect of soil_props on carbon decomposition rate. 1: no stress, 0: complete stress"
    },
    "cTauSoilT__c_eco_k_f_soilT": {
      "standard_name": "c_eco_k_f_soilT",
      "long_name": "c eco k f soilT",
      "units": "-",
      "sindbad_field": "cTauSoilT",
      "description": "effect of soil temperature on carbon decomposition rate. 1: no stress, 0: complete stress"
    },
    "cTauSoilW__c_eco_k_f_soilW": {
      "standard_name": "c_eco_k_f_soilW",
      "long_name": "c eco k f soilW",
      "units": "-",
      "sindbad_field": "cTauSoilW",
      "description": "effect of soil moisture on carbon decomposition rate. 1: no stress, 0: complete stress"
    },
    "cTauVegProperties__LIGEFF": {
      "standard_name": "LIGEFF",
      "long_name": "LIGEFF",
      "units": "-",
      "sindbad_field": "cTauVegProperties",
      "description": null
    },
    "cTauVegProperties__LIGNIN": {
      "standard_name": "LIGNIN",
      "long_name": "LIGNIN",
      "units": "-",
      "sindbad_field": "cTauVegProperties",
      "description": null
    },
    "cTauVegProperties__LITC2N": {
      "standard_name": "LITC2N",
      "long_name": "LITC2N",
      "units": "-",
      "sindbad_field": "cTauVegProperties",
      "description": null
    },
    "cTauVegProperties__MTF": {
      "standard_name": "MTF",
      "long_name": "MTF",
      "units": "-",
      "sindbad_field": "cTauVegProperties",
      "description": ""
    },
    "cTauVegProperties__SCLIGNIN": {
      "standard_name": "SCLIGNIN",
      "long_name": "SCLIGNIN",
      "units": "-",
      "sindbad_field": "cTauVegProperties",
      "description": ""
    },
    "cTauVegProperties__c_eco_k_f_veg_props": {
      "standard_name": "c_eco_k_f_veg_props",
      "long_name": "c eco k f veg props",
      "units": "-",
      "sindbad_field": "cTauVegProperties",
      "description": "effect of veg_props on carbon decomposition rate. 1: no stress, 0: complete stress"
    },
    "fluxes__auto_respiration": {
      "standard_name": "autotrophic_respiration",
      "long_name": "auto respiration",
      "units": "gC/m2/time",
      "sindbad_field": "fluxes",
      "description": "carbon loss due to autotrophic respiration"
    },
    "fluxes__base_runoff": {
      "standard_name": "base_runoff",
      "long_name": "base runoff",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "base runoff"
    },
    "fluxes__drainage": {
      "standard_name": "drainage",
      "long_name": "drainage",
      "units": "mm/time",
      "sindbad_field": "drainage",
      "description": "soil moisture drainage per soil layer"
    },
    "fluxes__eco_respiration": {
      "standard_name": "ecosystem_respiration",
      "long_name": "total_ecosystem_respiration",
      "units": "gC/m2/time",
      "sindbad_field": "fluxes",
      "description": "carbon loss due to ecosystem respiration"
    },
    "fluxes__evaporation": {
      "standard_name": "evaporation",
      "long_name": "soil_evaporation",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "evaporation from the first soil layer"
    },
    "fluxes__evapotranspiration": {
      "standard_name": "evapotranspiration",
      "long_name": "total_land_evaporation",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "total land evaporation including soil evaporation, vegetation transpiration, snow sublimation, and interception loss"
    },
    "fluxes__gpp": {
      "standard_name": "gpp",
      "long_name": "gpp",
      "units": "gC/m2/time",
      "sindbad_field": "fluxes",
      "description": "gross primary prodcutivity"
    },
    "fluxes__gw_capillary_flux": {
      "standard_name": "gw_capillary_flux",
      "long_name": "gw capillary flux",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "capillary flux from top groundwater layer to the lowermost soil layer"
    },
    "fluxes__gw_recharge": {
      "standard_name": "gw_recharge",
      "long_name": "gw recharge",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "recharge to groundwater from the lowermost soil layer"
    },
    "fluxes__hetero_respiration": {
      "standard_name": "hetero_respiration",
      "long_name": "heterotrophic_respiration",
      "units": "gC/m2/time",
      "sindbad_field": "fluxes",
      "description": "carbon loss due to heterotrophic respiration"
    },
    "fluxes__interception": {
      "standard_name": "interception",
      "long_name": "interception",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "interception evaporation loss"
    },
    "fluxes__PET_evaporation": {
      "standard_name": "PET_evaporation",
      "long_name": "PET evaporation",
      "units": "mm/time",
      "sindbad_field": "evaporation",
      "description": "potential soil evaporation"
    },
    "fluxes__nee": {
      "standard_name": "nee",
      "long_name": "nee",
      "units": "gC/m2/time",
      "sindbad_field": "fluxes",
      "description": "net ecosystem carbon exchange for the ecosystem. negative value indicates carbon sink."
    },
    "fluxes__npp": {
      "standard_name": "npp",
      "long_name": "npp",
      "units": "gC/m2/time",
      "sindbad_field": "fluxes",
      "description": "net primary prodcutivity"
    },
    "fluxes__overland_runoff": {
      "standard_name": "overland_runoff",
      "long_name": "overland runoff",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "overland runoff as a fraction of incoming water"
    },
    "fluxes__percolation": {
      "standard_name": "percolation",
      "long_name": "percolation",
      "units": "mm/time",
      "sindbad_field": "percolation",
      "description": "amount of moisture percolating to the top soil layer"
    },
    "fluxes__PET": {
        "standard_name": "PET",
        "long_name": "PET",
        "units": "mm/time",
        "sindbad_field": "fluxes",
        "description": "potential evapotranspiration"
      },
    "fluxes__precip": {
        "standard_name": "precip",
        "long_name": "precip",
        "units": "mm/time",
        "sindbad_field": "fluxes",
        "description": "total land precipitation including snow and rain"
      },
    "fluxes__rain": {
        "standard_name": "rain",
        "long_name": "rain",
        "units": "mm/time",
        "sindbad_field": "fluxes",
        "description": "amount of precipitation in liquid form"
      },
    "fluxes__runoff": {
      "standard_name": "runoff",
      "long_name": "runoff",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "total runoff"
    },
    "fluxes__sat_excess_runoff": {
      "standard_name": "sat_excess_runoff",
      "long_name": "sat excess runoff",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "saturation excess runoff"
    },
    "fluxes__snow": {
        "standard_name": "snow",
        "long_name": "snow",
        "units": "mm/time",
        "sindbad_field": "fluxes",
        "description": "amount of precipitation in solid form"
    },
    "fluxes__snow_melt": {
      "standard_name": "snow_melt",
      "long_name": "snow melt",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "snow melt"
    },
    "fluxes__soil_capillary_flux": {
      "standard_name": "soil_capillary_flux",
      "long_name": "soil capillary flux",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "soil capillary flux per layer"
    },
    "fluxes__sublimation": {
      "standard_name": "sublimation",
      "long_name": "sublimation",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "total land precipitation including snow and rain"
    },
    "fluxes__surface_runoff": {
      "standard_name": "surface_runoff",
      "long_name": "surface runoff",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "total surface runoff"
    },
    "fluxes__transpiration": {
      "standard_name": "transpiration",
      "long_name": "transpiration",
      "units": "mm/time",
      "sindbad_field": "fluxes",
      "description": "transpiration"
    },
    "gppAirT__gpp_f_airT": {
      "standard_name": "gpp_f_airT",
      "long_name": "gpp f airT",
      "units": "-",
      "sindbad_field": "gppAirT",
      "description": "effect of air temperature on gpp. 1: no stress, 0: complete stress"
    },
    "gppDemand__gpp_climate_stressors": {
      "standard_name": "gpp_climate_stressors",
      "long_name": "gpp climate stressors",
      "units": "-",
      "sindbad_field": "gppDemand",
      "description": "a collection of all gpp climate stressors including light, temperature, radiation, and vpd"
    },
    "gppDemand__gpp_demand": {
      "standard_name": "gpp_demand",
      "long_name": "gpp demand",
      "units": "gC/m2/time",
      "sindbad_field": "gppDemand",
      "description": "demand driven gross primary productivity"
    },
    "gppDemand__gpp_f_climate": {
      "standard_name": "gpp_f_climate",
      "long_name": "gpp f climate",
      "units": "-",
      "sindbad_field": "gppDemand",
      "description": "effect of climate on gpp. 1: no stress, 0: complete stress"
    },
    "gppDiffRadiation__CI_max": {
      "standard_name": "CI_max",
      "long_name": "CI max",
      "units": "-",
      "sindbad_field": "gppDiffRadiation",
      "description": "maximum of cloudiness index until the time step from the beginning of simulation (including spinup)"
    },
    "gppDiffRadiation__CI_min": {
      "standard_name": "CI_min",
      "long_name": "CI min",
      "units": "-",
      "sindbad_field": "gppDiffRadiation",
      "description": "minimum of cloudiness index until the time step from the beginning of simulation (including spinup)"
    },
    "gppDiffRadiation__gpp_f_cloud": {
      "standard_name": "gpp_f_cloud",
      "long_name": "gpp f cloud",
      "units": "-",
      "sindbad_field": "gppDiffRadiation",
      "description": "effect of cloud on gpp. 1: no stress, 0: complete stress"
    },
    "gppDirRadiation__gpp_f_light": {
      "standard_name": "gpp_f_light",
      "long_name": "gpp f light",
      "units": "-",
      "sindbad_field": "gppDirRadiation",
      "description": "effect of light on gpp. 1: no stress, 0: complete stress"
    },
    "gppPotential__gpp_potential": {
      "standard_name": "gpp_potential",
      "long_name": "gpp potential",
      "units": "gC/m2/time",
      "sindbad_field": "gppPotential",
      "description": "potential gross primary prodcutivity"
    },
    "gppSoilW__gpp_f_soilW": {
      "standard_name": "gpp_f_soilW",
      "long_name": "gpp f soilW",
      "units": "-",
      "sindbad_field": "gppSoilW",
      "description": "effect of soil moisture on gpp. 1: no stress, 0: complete stress"
    },
    "gppSoilW__t_two": {
      "standard_name": "t_two",
      "long_name": "t two",
      "units": "number",
      "sindbad_field": "gppSoilW",
      "description": "a type stable 2"
    },
    "gppVPD__gpp_f_vpd": {
      "standard_name": "gpp_f_vpd",
      "long_name": "gpp f vpd",
      "units": "-",
      "sindbad_field": "gppVPD",
      "description": "effect of vpd on gpp. 1: no stress, 0: complete stress"
    },
    "pools__TWS": {
      "standard_name": "TWS",
      "long_name": "TWS",
      "units": "mm",
      "sindbad_field": "pools",
      "description": "terrestrial water storage including all water pools"
    },
    "pools__cEco": {
      "standard_name": "cEco",
      "long_name": "cEco",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cEco pool(s)"
    },
    "pools__cLit": {
      "standard_name": "cLit",
      "long_name": "cLit",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cLit pool(s)"
    },
    "pools__cLitFast": {
      "standard_name": "cLitFast",
      "long_name": "cLitFast",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cLitFast pool(s)"
    },
    "pools__cLitSlow": {
      "standard_name": "cLitSlow",
      "long_name": "cLitSlow",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cLitSlow pool(s)"
    },
    "pools__cSoil": {
      "standard_name": "cSoil",
      "long_name": "cSoil",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cSoil pool(s)"
    },
    "pools__cSoilOld": {
      "standard_name": "cSoilOld",
      "long_name": "cSoilOld",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cSoilOld pool(s)"
    },
    "pools__cSoilSlow": {
      "standard_name": "cSoilSlow",
      "long_name": "cSoilSlow",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cSoilSlow pool(s)"
    },
    "pools__cVeg": {
      "standard_name": "cVeg",
      "long_name": "cVeg",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cVeg pool(s)"
    },
    "pools__cVegLeaf": {
      "standard_name": "cVegLeaf",
      "long_name": "cVegLeaf",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cVegLeaf pool(s)"
    },
    "pools__cVegReserve": {
      "standard_name": "cVegReserve",
      "long_name": "cVegReserve",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cVegReserve pool(s)"
    },
    "pools__cVegRoot": {
      "standard_name": "cVegRoot",
      "long_name": "cVegRoot",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cVegRoot pool(s)"
    },
    "pools__cVegWood": {
      "standard_name": "cVegWood",
      "long_name": "cVegWood",
      "units": "gC/m2",
      "sindbad_field": "pools",
      "description": "carbon content of cVegWood pool(s)"
    },
    "pools__groundW": {
      "standard_name": "groundW",
      "long_name": "groundW",
      "units": "mm",
      "sindbad_field": "pools",
      "description": "water storage in groundW pool(s)"
    },
    "pools__snowW": {
      "standard_name": "snowW",
      "long_name": "snowW",
      "units": "mm",
      "sindbad_field": "pools",
      "description": "water storage in snowW pool(s)"
    },
    "pools__soilW": {
      "standard_name": "soilW",
      "long_name": "soilW",
      "units": "mm",
      "sindbad_field": "pools",
      "description": "water storage in soilW pool(s)"
    },
    "pools__surfaceW": {
      "standard_name": "surfaceW",
      "long_name": "surfaceW",
      "units": "mm",
      "sindbad_field": "pools",
      "description": "water storage in surfaceW pool(s)"
    },
    "rootMaximumDepth__sum_soil_depth": {
      "standard_name": "sum_soil_depth",
      "long_name": "sum soil depth",
      "units": "mm",
      "sindbad_field": "rootMaximumDepth",
      "description": "total depth of soil"
    },
    "rootWaterEfficiency__cumulative_soil_depths": {
      "standard_name": "cumulative_soil_depths",
      "long_name": "cumulative soil depths",
      "units": "mm",
      "sindbad_field": "rootWaterEfficiency",
      "description": "the depth to the bottom of each soil layer"
    },
    "rootWaterEfficiency__root_over": {
      "standard_name": "root_over",
      "long_name": "root over",
      "units": "boolean",
      "sindbad_field": "rootWaterEfficiency",
      "description": "a boolean indicating if the root is allowed to exract water from a given layer depending on maximum rooting depth"
    },
    "soilProperties__sp_kFC": {
      "standard_name": "sp_kFC",
      "long_name": "sp kFC",
      "units": "mm/time",
      "sindbad_field": "soilProperties",
      "description": "calculated/input hydraulic conductivity of soil at field capacity per layer"
    },
    "soilProperties__sp_kSat": {
      "standard_name": "sp_kSat",
      "long_name": "sp kSat",
      "units": "mm/time",
      "sindbad_field": "soilProperties",
      "description": "calculated/input hydraulic conductivity of soil at saturation per layer"
    },
    "soilProperties__sp_kWP": {
      "standard_name": "sp_kWP",
      "long_name": "sp kWP",
      "units": "mm/time",
      "sindbad_field": "soilProperties",
      "description": "calculated/input hydraulic conductivity of soil at wilting point per layer"
    },
    "soilProperties__sp_α": {
      "standard_name": "sp_α",
      "long_name": "sp α",
      "units": "number",
      "sindbad_field": "soilProperties",
      "description": "calculated/input alpha parameter of soil per layer"
    },
    "soilProperties__sp_β": {
      "standard_name": "sp_β",
      "long_name": "sp β",
      "units": "number",
      "sindbad_field": "soilProperties",
      "description": "calculated/input beta parameter of soil per layer"
    },
    "soilProperties__sp_θFC": {
      "standard_name": "sp_θFC",
      "long_name": "sp θFC",
      "units": "-",
      "sindbad_field": "soilProperties",
      "description": "calculated/input moisture content of soil at field capacity per layer"
    },
    "soilProperties__sp_θSat": {
      "standard_name": "sp_θSat",
      "long_name": "sp θSat",
      "units": "-",
      "sindbad_field": "soilProperties",
      "description": "calculated/input moisture content of soil at saturation (porosity) per layer"
    },
    "soilProperties__sp_θWP": {
      "standard_name": "sp_θWP",
      "long_name": "sp θWP",
      "units": "-",
      "sindbad_field": "soilProperties",
      "description": "calculated/input moisture content of soil at wilting point per layer"
    },
    "soilProperties__sp_ψFC": {
      "standard_name": "sp_ψFC",
      "long_name": "sp ψFC",
      "units": "m",
      "sindbad_field": "soilProperties",
      "description": "calculated/input matric potential of soil at field capacity per layer"
    },
    "soilProperties__sp_ψSat": {
      "standard_name": "sp_ψSat",
      "long_name": "sp ψSat",
      "units": "m",
      "sindbad_field": "soilProperties",
      "description": "calculated/input matric potential of soil at saturation per layer"
    },
    "soilProperties__sp_ψWP": {
      "standard_name": "sp_ψWP",
      "long_name": "sp ψWP",
      "units": "m",
      "sindbad_field": "soilProperties",
      "description": "calculated/input matric potential of soil at wiliting point per layer"
    },
    "soilProperties__unsat_k_model": {
      "standard_name": "unsat_k_model",
      "long_name": "unsat k model",
      "units": "symbol",
      "sindbad_field": "soilProperties",
      "description": "name of the model used to calculate unsaturated hydraulic conductivity"
    },
    "soilTexture__st_CLAY": {
      "standard_name": "st_CLAY",
      "long_name": "st CLAY",
      "units": "fraction",
      "sindbad_field": "soilTexture",
      "description": "fraction of clay content in the soil"
    },
    "soilTexture__st_ORGM": {
      "standard_name": "st_ORGM",
      "long_name": "st ORGM",
      "units": "fraction",
      "sindbad_field": "soilTexture",
      "description": "fraction of organic matter content in the soil per layer"
    },
    "soilTexture__st_SAND": {
      "standard_name": "st_SAND",
      "long_name": "st SAND",
      "units": "fraction",
      "sindbad_field": "soilTexture",
      "description": "fraction of sand content in the soil per layer"
    },
    "soilTexture__st_SILT": {
      "standard_name": "st_SILT",
      "long_name": "st SILT",
      "units": "fraction",
      "sindbad_field": "soilTexture",
      "description": "fraction of silt content in the soil per layer"
    },
    "soilWBase__kFC": {
      "standard_name": "soil_kFC",
      "long_name": "kFC",
      "units": "mm/time",
      "sindbad_field": "soilWBase",
      "description": "hydraulic conductivity of soil at field capacity per layer"
    },
    "soilWBase__kSat": {
      "standard_name": "kSat",
      "long_name": "kSat",
      "units": "mm/time",
      "sindbad_field": "soilWBase",
      "description": "hydraulic conductivity of soil at saturation per layer"
    },
    "soilWBase__kWP": {
      "standard_name": "kWP",
      "long_name": "kWP",
      "units": "mm/time",
      "sindbad_field": "soilWBase",
      "description": "hydraulic conductivity of soil at wilting point per layer"
    },
    "soilWBase__wAWC": {
      "standard_name": "wAWC",
      "long_name": "wAWC",
      "units": "mm",
      "sindbad_field": "soilWBase",
      "description": "maximum amount of water available for vegetation/transpiration per soil layer (wSat-WP)"
    },
    "soilWBase__wFC": {
      "standard_name": "wFC",
      "long_name": "wFC",
      "units": "mm",
      "sindbad_field": "soilWBase",
      "description": "amount of water in the soil at field capacity per layer"
    },
    "soilWBase__wSat": {
      "standard_name": "wSat",
      "long_name": "wSat",
      "units": "mm",
      "sindbad_field": "soilWBase",
      "description": "amount of water in the soil at saturation per layer"
    },
    "soilWBase__WP": {
      "standard_name": "WP",
      "long_name": "WP",
      "units": "mm",
      "sindbad_field": "soilWBase",
      "description": "amount of water in the soil at wiliting point per layer"
    },
    "soilWBase__soil_α": {
      "standard_name": "soil_α",
      "long_name": "soil_α",
      "units": "number",
      "sindbad_field": "soilWBase",
      "description": "alpha parameter of soil per layer"
    },
    "soilWBase__soil_β": {
      "standard_name": "soil_β",
      "long_name": "soil_β",
      "units": "number",
      "sindbad_field": "soilWBase",
      "description": "beta parameter of soil per layer"
    },
    "soilWBase__θFC": {
      "standard_name": "θFC",
      "long_name": "θFC",
      "units": "-",
      "sindbad_field": "soilWBase",
      "description": "moisture content of soil at field capacity per layer"
    },
    "soilWBase__θSat": {
      "standard_name": "θSat",
      "long_name": "θSat",
      "units": "-",
      "sindbad_field": "soilWBase",
      "description": "moisture content of soil at saturation (porosity) per layer"
    },
    "soilWBase__θWP": {
      "standard_name": "θWP",
      "long_name": "θWP",
      "units": "-",
      "sindbad_field": "soilWBase",
      "description": "moisture content of soil at wilting point per layer"
    },
    "soilWBase__ψFC": {
      "standard_name": "ψFC",
      "long_name": "ψFC",
      "units": "m",
      "sindbad_field": "soilWBase",
      "description": "matric potential of soil at field capacity per layer"
    },
    "soilWBase__ψSat": {
      "standard_name": "ψSat",
      "long_name": "ψSat",
      "units": "m",
      "sindbad_field": "soilWBase",
      "description": "matric potential of soil at saturation per layer"
    },
    "soilWBase__ψWP": {
      "standard_name": "ψWP",
      "long_name": "ψWP",
      "units": "m",
      "sindbad_field": "soilWBase",
      "description": "matric potential of soil at wiliting point per layer"
    },
    "soilWBase__sum_wAWC": {
      "standard_name": "sum_wAWC",
      "long_name": "s wAWC",
      "units": "mm",
      "sindbad_field": "soilWBase",
      "description": "total amount of water available for vegetation/transpiration"
    },
    "soilWBase__sum_wFC": {
      "standard_name": "sum_wFC",
      "long_name": "s wFC",
      "units": "mm",
      "sindbad_field": "soilWBase",
      "description": "total amount of water in the soil at field capacity"
    },
    "soilWBase__sum_wSat": {
      "standard_name": "sum_wSat",
      "long_name": "s wSat",
      "units": "mm",
      "sindbad_field": "soilWBase",
      "description": "total amount of water in the soil at saturation"
    },
    "soilWBase__sum_WP": {
      "standard_name": "sum_WP",
      "long_name": "s WP",
      "units": "mm",
      "sindbad_field": "soilWBase",
      "description": "total amount of water in the soil at wiliting point"
    },
    "soilWBase__soil_layer_thickness": {
      "standard_name": "soil_layer_thickness",
      "long_name": "soil layer thickness",
      "units": "mm",
      "sindbad_field": "soilWBase",
      "description": "thickness of each soil layer"
    },
    "states__LAI": {
      "standard_name": "LAI",
      "long_name": "LAI",
      "units": "m2/m2",
      "sindbad_field": "states",
      "description": "leaf area index"
    },
    "states__WBP": {
      "standard_name": "WBP",
      "long_name": "WBP",
      "units": "mm",
      "sindbad_field": "states",
      "description": "water balance tracker"
    },
    "states__ambient_CO2": {
      "standard_name": "ambient_CO2",
      "long_name": "ambient CO2",
      "units": "ppm",
      "sindbad_field": "states",
      "description": "ambient co2 concentration"
    },
    "states__auto_respiration_growth": {
      "standard_name": "auto_respiration_growth",
      "long_name": "auto respiration growth",
      "units": "gC/m2/time",
      "sindbad_field": "states",
      "description": "growth respiration per vegetation pool"
    },
    "states__auto_respiration_maintain": {
      "standard_name": "auto_respiration_maintain",
      "long_name": "auto respiration maintain",
      "units": "gC/m2/time",
      "sindbad_field": "states",
      "description": "maintenance respiration per vegetation pool"
    },
    "states__cEco_prev": {
      "standard_name": "cEco_prev",
      "long_name": "cEco_previous_time_step",
      "units": "gC/m2",
      "sindbad_field": "states",
      "description": "ecosystem carbon content of the previous time step"
    },
    "states__c_allocation": {
      "standard_name": "c_allocation",
      "long_name": "c allocation",
      "units": "-",
      "sindbad_field": "states",
      "description": "fraction of gpp allocated to different (live) carbon pools"
    },
    "states__c_eco_efflux": {
      "standard_name": "c_eco_efflux",
      "long_name": "c eco efflux",
      "units": "gC/m2/time",
      "sindbad_field": "states",
      "description": "losss of carbon from (live) vegetation pools due to autotrophic respiration"
    },
    "states__c_eco_flow": {
      "standard_name": "c_eco_flow",
      "long_name": "c eco flow",
      "units": "gC/m2/time",
      "sindbad_field": "states",
      "description": "flow of carbon to a given carbon pool from other carbon pools"
    },
    "states__c_eco_influx": {
      "standard_name": "c_eco_influx",
      "long_name": "c eco influx",
      "units": "gC/m2/time",
      "sindbad_field": "states",
      "description": "net influx from allocation and efflux (npp) to each (live) carbon pool"
    },
    "states__c_eco_k": {
      "standard_name": "c_eco_k",
      "long_name": "c eco k",
      "units": "/time",
      "sindbad_field": "states",
      "description": "decomposition rate of carbon per pool"
    },
    "states__c_eco_npp": {
      "standard_name": "c_eco_npp",
      "long_name": "c eco npp",
      "units": "gC/m2/time",
      "sindbad_field": "states",
      "description": "npp of each carbon pool"
    },
    "states__c_eco_out": {
      "standard_name": "c_eco_out",
      "long_name": "c eco out",
      "units": "gC/m2/time",
      "sindbad_field": "states",
      "description": "outflux of carbon from each carbol pool"
    },
    "states__c_flow_A_vec": {
      "standard_name": "c_flow_A_vec",
      "long_name": "c flow A vec",
      "units": "-",
      "sindbad_field": "states",
      "description": "fraction of the carbon loss fron a (giver) pool that flows to a (taker) pool"
    },
    "states__fAPAR": {
      "standard_name": "fAPAR",
      "long_name": "fAPAR",
      "units": "-",
      "sindbad_field": "states",
      "description": "fraction of absorbed photosynthetically active radiation"
    },
    "states__frac_snow": {
      "standard_name": "frac_snow",
      "long_name": "frac snow",
      "units": "-",
      "sindbad_field": "states",
      "description": "fractional coverage of grid with snow"
    },
    "states__frac_tree": {
      "standard_name": "frac_tree",
      "long_name": "frac tree",
      "units": "-",
      "sindbad_field": "states",
      "description": "fractional coverage of grid with trees"
    },
    "states__max_root_depth": {
      "standard_name": "max_root_depth",
      "long_name": "max root depth",
      "units": "mm",
      "sindbad_field": "states",
      "description": "maximum depth of root"
    },
    "states__PAW": {
      "standard_name": "PAW",
      "long_name": "PAW",
      "units": "mm",
      "sindbad_field": "states",
      "description": "amount of water available for transpiration per soil layer"
    },
    "states__root_water_efficiency": {
      "standard_name": "root_water_efficiency",
      "long_name": "root water efficiency",
      "units": "-",
      "sindbad_field": "states",
      "description": "a efficiency like number that indicates the ease/fraction of soil water that can extracted by the root per layer"
    },
    "states__root_water_uptake": {
      "standard_name": "root_water_uptake",
      "long_name": "root water uptake",
      "units": "mm/time",
      "sindbad_field": "states",
      "description": "amount of water uptaken for transpiration per soil layer"
    },
    "states__totalW": {
      "standard_name": "totalW",
      "long_name": "total_water",
      "units": "mm",
      "sindbad_field": "states",
      "description": "sum of water storage across all components"
    },
    "states__totalW_prev": {
      "standard_name": "totalW_prev",
      "long_name": "total_water_previous",
      "units": "mm",
      "sindbad_field": "states",
      "description": "sum of water storage across all components in previous time step"
    },
    "states__transpiration_supply": {
      "standard_name": "transpiration_supply",
      "long_name": "transpiration supply",
      "units": "mm",
      "sindbad_field": "states",
      "description": "total amount of water available in soil for transpiration"
    },
    "states__zero_c_eco_flow": {
      "standard_name": "zero_c_eco_flow",
      "long_name": "zero c eco flow",
      "units": "gC/m2/time",
      "sindbad_field": "states",
      "description": "helper for resetting c_eco_flow in every time step"
    },
    "states__zero_c_eco_influx": {
      "standard_name": "zero_c_eco_influx",
      "long_name": "zero c eco influx",
      "units": "gC/m2/time",
      "sindbad_field": "states",
      "description": "helper for resetting c_eco_influx in every time step"
    },
    "states__ΔTWS": {
      "standard_name": "ΔTWS",
      "long_name": "ΔTWS",
      "units": "mm",
      "sindbad_field": "states",
      "description": "change in water storage in TWS pool(s)"
    },
    "states__ΔcEco": {
      "standard_name": "ΔcEco",
      "long_name": "ΔcEco",
      "units": "mm",
      "sindbad_field": "states",
      "description": "change in water storage in cEco pool(s)"
    },
    "states__ΔgroundW": {
      "standard_name": "ΔgroundW",
      "long_name": "ΔgroundW",
      "units": "mm",
      "sindbad_field": "states",
      "description": "change in water storage in groundW pool(s)"
    },
    "states__ΔsnowW": {
      "standard_name": "ΔsnowW",
      "long_name": "ΔsnowW",
      "units": "mm",
      "sindbad_field": "states",
      "description": "change in water storage in snowW pool(s)"
    },
    "states__ΔsoilW": {
      "standard_name": "ΔsoilW",
      "long_name": "ΔsoilW",
      "units": "mm",
      "sindbad_field": "states",
      "description": "change in water storage in soilW pool(s)"
    },
    "states__ΔsurfaceW": {
      "standard_name": "ΔsurfaceW",
      "long_name": "ΔsurfaceW",
      "units": "mm",
      "sindbad_field": "states",
      "description": "change in water storage in surfaceW pool(s)"
    },
    "wCycleBase__n_TWS": {
      "standard_name": "n_TWS",
      "long_name": "n TWS",
      "units": "number",
      "sindbad_field": "wCycleBase",
      "description": "total number of water pools"
    },
    "wCycleBase__n_groundW": {
      "standard_name": "n_groundW",
      "long_name": "n groundW",
      "units": "number",
      "sindbad_field": "wCycleBase",
      "description": "total number of layers in groundwater pool"
    },
    "wCycleBase__n_snowW": {
      "standard_name": "n_snowW",
      "long_name": "n snowW",
      "units": "number",
      "sindbad_field": "wCycleBase",
      "description": "total number of layers in snow pool"
    },
    "wCycleBase__n_soilW": {
      "standard_name": "n_soilW",
      "long_name": "n soilW",
      "units": "number",
      "sindbad_field": "wCycleBase",
      "description": "total number of layers in soil moisture pool"
    },
    "wCycleBase__n_surfaceW": {
      "standard_name": "n_surfaceW",
      "long_name": "n surfaceW",
      "units": "number",
      "sindbad_field": "wCycleBase",
      "description": "total number of layers in surface water pool"
    },
    "wCycleBase__o_one": {
      "standard_name": "o_one",
      "long_name": "o one",
      "units": "numver",
      "sindbad_field": "wCycleBase",
      "description": "a helper type stable 1 to be used across all models"
    },
    "wCycleBase__w_model": {
      "standard_name": "w_model",
      "long_name": "w model",
      "units": "symbol",
      "sindbad_field": "wCycleBase",
      "description": "a base water cycle model to loop through the pools and fill the main or component pools needed for using static arrays. A mandatory field for every water model/pool realization"
    },
    "wCycleBase__z_zero": {
      "standard_name": "z_zero",
      "long_name": "z zero",
      "units": "number",
      "sindbad_field": "wCycleBase",
      "description": "a helper type stable 0 to be used across all models"
    },
    "states__water_balance": {
      "standard_name": "water_balance",
      "long_name": "water balance",
      "units": "mm",
      "sindbad_field": "states",
      "description": "misbalance of the water for the given time step calculated as the differences between total input, output and change in storages"
    }
  }
  