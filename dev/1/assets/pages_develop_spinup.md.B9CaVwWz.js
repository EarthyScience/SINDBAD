import{_ as s,c as e,o as n,aA as a}from"./chunks/framework.CB6YZlnI.js";const u=JSON.parse('{"title":"SINDBAD Spinup","description":"","frontmatter":{},"headers":[],"relativePath":"pages/develop/spinup.md","filePath":"pages/develop/spinup.md","lastUpdated":null}'),p={name:"pages/develop/spinup.md"};function t(l,i,o,h,d,r){return n(),e("div",null,i[0]||(i[0]=[a(`<h1 id="SINDBAD-Spinup" tabindex="-1">SINDBAD Spinup <a class="header-anchor" href="#SINDBAD-Spinup" aria-label="Permalink to &quot;SINDBAD Spinup {#SINDBAD-Spinup}&quot;">​</a></h1><p>This documentation introduces SINDBAD spinup and provides a framework for adding new spinup methods while maintaining consistency with SINDBAD&#39;s architecture.</p><p>Spinup is carried out in every experiment to take the model state to an equilibrium. The equilibrium is dependent on data, model and parameters, and should therefore, a Spinup is always required.</p><h2 id="Configuration" tabindex="-1">Configuration <a class="header-anchor" href="#Configuration" aria-label="Permalink to &quot;Configuration {#Configuration}&quot;">​</a></h2><p>Spinup is configured in the experiment settings file through two main sections:</p><ol><li><strong>Flags Section</strong>:</li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;flags&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;spinup_TEM&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;store_spinup&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><p><code>spinup_TEM</code>: Activates the spinup process</p></li><li><p><code>store_spinup</code>: Controls whether to store spinup results from each sequence</p></li></ul><ol><li><strong>Model Spinup Section</strong>:</li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;model_spinup&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;restart_file&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;sequence&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;forcing&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;all_years&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;n_repeat&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">            &quot;spinup_mode&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;all_forward_models&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    ]</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ul><li><p><code>restart_file</code>: Path to a previous simulation&#39;s state (null for no restart)</p></li><li><p><code>sequence</code>: Array of spinup steps executed sequentially</p><ul><li><p><code>forcing</code>: Forcing variant to use</p></li><li><p><code>n_repeat</code>: Number of sequence repetitions</p></li><li><p><code>spinup_mode</code>: The spinup method to use</p></li></ul></li></ul><h2 id="Available-Spinup-Methods" tabindex="-1">Available Spinup Methods <a class="header-anchor" href="#Available-Spinup-Methods" aria-label="Permalink to &quot;Available Spinup Methods {#Available-Spinup-Methods}&quot;">​</a></h2><p>Spinup methods are stored in spinup functions within SindbadTEM. The different methods are dispatched on types generated.</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SindbadTEM</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">?SindbadTEM</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">spinup</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">To list all available spinup methods and their purposes, use:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Sindbad</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">showMethodsOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SpinupMode)</span></span></code></pre></div><p>This will display a formatted list of all spinup methods and their descriptions.</p></div><p>Current methods include:</p><ul><li><p><code>AllForwardModels</code>: Use all forward models for spinup</p></li><li><p><code>EtaScaleA0H</code>: Scale carbon pools using diagnostic scalars for ηH and c_remain</p></li><li><p><code>EtaScaleAH</code>: Scale carbon pools using diagnostic scalars for ηH and ηA</p></li><li><p><code>NlsolveFixedpointTrustregionCEco</code>: Use a fixed-point nonlinear solver with trust region for carbon pools (cEco)</p></li><li><p><code>NlsolveFixedpointTrustregionCEcoTWS</code>: Use a fixed-point nonlinear solver with trust region for both cEco and TWS</p></li><li><p><code>NlsolveFixedpointTrustregionTWS</code>: Use a fixed-point nonlinear solver with trust region for Total Water Storage (TWS)</p></li><li><p><code>ODEAutoTsit5Rodas5</code>: Use the AutoVern7(Rodas5) method from DifferentialEquations.jl for solving ODEs</p></li><li><p><code>ODEDP5</code>: Use the DP5 method from DifferentialEquations.jl for solving ODEs</p></li><li><p><code>ODETsit5</code>: Use the Tsit5 method from DifferentialEquations.jl for solving ODEs</p></li><li><p><code>SelSpinupModels</code>: Run only the models selected for spinup in the model structure</p></li><li><p><code>SSPDynamicSSTsit5</code>: Use the SteadyState solver with DynamicSS and Tsit5 methods</p></li><li><p><code>SSPSSRootfind</code>: Use the SteadyState solver with SSRootfind method</p></li></ul><h2 id="Adding-New-Spinup-Methods" tabindex="-1">Adding New Spinup Methods <a class="header-anchor" href="#Adding-New-Spinup-Methods" aria-label="Permalink to &quot;Adding New Spinup Methods {#Adding-New-Spinup-Methods}&quot;">​</a></h2><p>SINDBAD uses a type-based dispatch system for spinup methods. To add a new spinup method, you need to:</p><ol><li><p>Define a new type in <code>src/Types/SpinupTypes.jl</code></p></li><li><p>Implement the spinup function in <code>spinupTEM.jl</code></p></li><li><p>Update the spinup sequence handling if needed</p></li></ol><h3 id="1.-Define-the-New-Spinup-Method-Type" tabindex="-1">1. Define the New Spinup Method Type <a class="header-anchor" href="#1.-Define-the-New-Spinup-Method-Type" aria-label="Permalink to &quot;1. Define the New Spinup Method Type {#1.-Define-the-New-Spinup-Method-Type}&quot;">​</a></h3><p>In <code>src/Types/SpinupTypes.jl</code>, add a new struct and its purpose function:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SindbadUtils</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> purpose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define the new spinup type</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> YourNewSpinupMode </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SpinupMode</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define its purpose</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">purpose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{YourNewSpinupMode}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Description of what YourNewSpinupMode does&quot;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">When naming new spinup types that use external packages, follow the convention <code>PackageNameMethodName</code>. For example:</p><ul><li><p><code>ODEAutoTsit5Rodas5</code> for the AutoVern7(Rodas5) method from DifferentialEquations.jl</p></li><li><p><code>NlsolveFixedpointTrustregionCEco</code> for the fixed-point solver from NLsolve.jl</p></li><li><p><code>SSPDynamicSSTsit5</code> for the SteadyState solver with DynamicSS and Tsit5 methods</p></li></ul><p>This convention helps identify both the package and the specific method being used.</p></div><p>The purpose function should:</p><ul><li><p>Be concise but informative</p></li><li><p>Focus on what the spinup method does and which pools it affects</p></li><li><p>Include any special conditions or requirements</p></li><li><p>Use consistent formatting with other spinup methods</p></li></ul><h3 id="2.-Implement-the-Spinup-Function" tabindex="-1">2. Implement the Spinup Function <a class="header-anchor" href="#2.-Implement-the-Spinup-Function" aria-label="Permalink to &quot;2. Implement the Spinup Function {#2.-Implement-the-Spinup-Function}&quot;">​</a></h3><p>In <code>spinupTEM.jl</code>, implement the spinup function:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> spinup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spinup_models, spinup_forcing, loc_forcing_t, land, tem_info, n_timesteps, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YourNewSpinupMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Your implementation here</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>The function should:</p><ol><li><p>Update the land state using provided models and forcing</p></li><li><p>Return the updated land state</p></li></ol><p>Example implementation:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> spinup</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spinup_models, spinup_forcing, loc_forcing_t, land, tem_info, n_timesteps, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YourNewSpinupMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Create custom spinup structure if needed</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    spinup_struct </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> YourSpinupStruct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spinup_models, spinup_forcing, tem_info, land, loc_forcing_t, n_timesteps)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Implement spinup logic</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # This could involve:</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # - Running time loops</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # - Using solvers</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # - Applying scaling factors</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Update land state</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    land </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> updateLandState</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(land, spinup_results)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> land</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h3 id="3.-Update-Spinup-Sequence-Handling-if-needed" tabindex="-1">3. Update Spinup Sequence Handling (if needed) <a class="header-anchor" href="#3.-Update-Spinup-Sequence-Handling-if-needed" aria-label="Permalink to &quot;3. Update Spinup Sequence Handling (if needed) {#3.-Update-Spinup-Sequence-Handling-if-needed}&quot;">​</a></h3><p>If your method requires special sequence handling:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> spinupSequence</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spinup_models, sel_forcing, loc_forcing_t, land, tem_info, n_timesteps, log_index, n_repeat, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YourNewSpinupMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    land </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> spinupSequenceLoop</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(spinup_models, sel_forcing, loc_forcing_t, land, tem_info, n_timesteps, log_index, n_repeat, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YourNewSpinupMode</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> land</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h2 id="Important-Considerations" tabindex="-1">Important Considerations <a class="header-anchor" href="#Important-Considerations" aria-label="Permalink to &quot;Important Considerations {#Important-Considerations}&quot;">​</a></h2><ol><li><p><strong>State Variables</strong>: Handle all relevant state variables (carbon pools, water storage, etc.)</p></li><li><p><strong>Performance</strong>: Implement efficient memory management and consider parallelization</p></li><li><p><strong>Convergence</strong>: Include appropriate convergence criteria and error handling</p></li><li><p><strong>Documentation</strong>: Add comprehensive docstrings explaining:</p></li></ol><ul><li><p>Mode/Method purpose</p></li><li><p>Required parameters</p></li><li><p>Return values</p></li><li><p>Special considerations</p></li></ul><h2 id="Testing" tabindex="-1">Testing <a class="header-anchor" href="#Testing" aria-label="Permalink to &quot;Testing {#Testing}&quot;">​</a></h2><p>After implementation:</p><ol><li><p>Test with small experiments</p></li><li><p>Verify spinup results match expectations</p></li></ol>`,42)]))}const c=s(p,[["render",t]]);export{u as __pageData,c as default};
