import{_ as t,c as i,o as a,aA as o}from"./chunks/framework.CB6YZlnI.js";const m=JSON.parse('{"title":"SINDBAD Experiment Outputs Documentation","description":"","frontmatter":{},"headers":[],"relativePath":"pages/develop/sindbad_outputs.md","filePath":"pages/develop/sindbad_outputs.md","lastUpdated":null}'),r={name:"pages/develop/sindbad_outputs.md"};function n(d,e,s,l,p,u){return a(),i("div",null,e[0]||(e[0]=[o('<h1 id="SINDBAD-Experiment-Outputs-Documentation" tabindex="-1">SINDBAD Experiment Outputs Documentation <a class="header-anchor" href="#SINDBAD-Experiment-Outputs-Documentation" aria-label="Permalink to &quot;SINDBAD Experiment Outputs Documentation {#SINDBAD-Experiment-Outputs-Documentation}&quot;">​</a></h1><p>This document provides an overview of the outputs generated by SINDBAD experiments, focusing on the various modes of operation and the corresponding output variables. Each mode of operation in SINDBAD experiments produces specific outputs, which are essential for analysis, optimization, and sensitivity studies.</p><h2 id="Overview-of-variables-in-the-output-NamedTuple." tabindex="-1">Overview of variables in the output NamedTuple. <a class="header-anchor" href="#Overview-of-variables-in-the-output-NamedTuple." aria-label="Permalink to &quot;Overview of variables in the output NamedTuple. {#Overview-of-variables-in-the-output-NamedTuple.}&quot;">​</a></h2><table tabindex="0"><thead><tr><th style="text-align:right;">Variable Name</th><th style="text-align:right;">Description</th></tr></thead><tbody><tr><td style="text-align:right;"><code>forcing</code></td><td style="text-align:right;">Forcing data used in the experiment (NamedTuple).</td></tr><tr><td style="text-align:right;"><code>info</code></td><td style="text-align:right;">Experiment configuration and metadata (NamedTuple).</td></tr><tr><td style="text-align:right;"><code>loss</code></td><td style="text-align:right;">Loss vector or cost metric comparing model output and observations.</td></tr><tr><td style="text-align:right;"><code>observation</code></td><td style="text-align:right;">Observation data array.</td></tr><tr><td style="text-align:right;"><code>output</code></td><td style="text-align:right;">Model output, keyed by variable name or as a NamedTuple.</td></tr><tr><td style="text-align:right;"><code>parameters</code></td><td style="text-align:right;">Optimized model parameters or optimization results.</td></tr><tr><td style="text-align:right;"><code>cost_options</code></td><td style="text-align:right;">Cost function configuration.</td></tr><tr><td style="text-align:right;"><code>run_helpers</code></td><td style="text-align:right;">Helper structures for the run (e.g., prepared models, outputs).</td></tr><tr><td style="text-align:right;"><code>loss_table</code></td><td style="text-align:right;">Table comparing loss metrics for optimized and default parameters.</td></tr><tr><td style="text-align:right;"><code>opti_helpers</code></td><td style="text-align:right;">Optimization helper structures.</td></tr><tr><td style="text-align:right;"><code>sensitivity</code></td><td style="text-align:right;">Sensitivity analysis results.</td></tr><tr><td style="text-align:right;"><code>p_bounds</code></td><td style="text-align:right;">Parameter bounds.</td></tr><tr><td style="text-align:right;"><code>obs_array</code></td><td style="text-align:right;">Array of observations.</td></tr><tr><td style="text-align:right;"><code>observations</code></td><td style="text-align:right;">Observation data structure.</td></tr></tbody></table><p>::: warn Note</p><p>The exact contents of these variables may vary depending on the specific experiment setup and requirements. Always refer to the relevant documentation or code comments for detailed information about each variable within your particular use case.</p><p>:::</p><h2 id="Output-Variables-from-Basic-Experiments-runExperiment-Function" tabindex="-1">Output Variables from Basic Experiments (<code>runExperiment</code> Function) <a class="header-anchor" href="#Output-Variables-from-Basic-Experiments-runExperiment-Function" aria-label="Permalink to &quot;Output Variables from Basic Experiments (`runExperiment` Function) {#Output-Variables-from-Basic-Experiments-runExperiment-Function}&quot;">​</a></h2><h3 id="1.-Cost-Calculation-Mode-DoCalcCost" tabindex="-1">1. Cost Calculation Mode (<code>DoCalcCost</code>) <a class="header-anchor" href="#1.-Cost-Calculation-Mode-DoCalcCost" aria-label="Permalink to &quot;1. Cost Calculation Mode (`DoCalcCost`) {#1.-Cost-Calculation-Mode-DoCalcCost}&quot;">​</a></h3><p>In this mode, the experiment calculates the cost between model outputs and observations. The output is a NamedTuple containing:</p><ul><li><p><code>forcing</code>: The forcing data used in the experiment.</p></li><li><p><code>info</code>: The experiment configuration and metadata.</p></li><li><p><code>loss</code>: A vector of loss values representing the cost between model outputs and observations.</p></li><li><p><code>observation</code>: An array of observation data used for comparison.</p></li><li><p><code>output</code>: The forward model output as a NamedTuple of variable pairs.</p></li></ul><p><strong>Example:</strong></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> runExperiment</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment_json)</span></span>\n<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">println</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(result</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">.</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">loss)</span></span></code></pre></div><h3 id="2.-Forward-Run-Mode-DoRunForward-or-DoNotRunOptimization" tabindex="-1">2. Forward Run Mode (<code>DoRunForward</code> or <code>DoNotRunOptimization</code>) <a class="header-anchor" href="#2.-Forward-Run-Mode-DoRunForward-or-DoNotRunOptimization" aria-label="Permalink to &quot;2. Forward Run Mode (`DoRunForward` or `DoNotRunOptimization`) {#2.-Forward-Run-Mode-DoRunForward-or-DoNotRunOptimization}&quot;">​</a></h3><p>In this mode, the experiment executes the model without optimization. The output is a NamedTuple containing:</p><ul><li><p><code>forcing</code>: The forcing data used in the experiment.</p></li><li><p><code>info</code>: The experiment configuration and metadata.</p></li><li><p><code>output</code>: The model output as a NamedTuple of variable pairs.</p></li></ul><p>This mode is useful for running simulations to understand the model&#39;s behavior under given conditions without altering any parameters through optimization.</p><h3 id="3.-Optimization-Mode-DoRunOptimization" tabindex="-1">3. Optimization Mode (<code>DoRunOptimization</code>) <a class="header-anchor" href="#3.-Optimization-Mode-DoRunOptimization" aria-label="Permalink to &quot;3. Optimization Mode (`DoRunOptimization`) {#3.-Optimization-Mode-DoRunOptimization}&quot;">​</a></h3><p>In this mode, the experiment runs with parameter optimization enabled. The output is a NamedTuple containing:</p><ul><li><p><code>forcing</code>: The forcing data used in the experiment.</p></li><li><p><code>info</code>: The experiment configuration and metadata.</p></li><li><p><code>observation</code>: An array of observation data used for comparison.</p></li><li><p><code>parameters</code>: The optimized parameters resulting from the optimization process.</p></li></ul><p>This mode is used to adjust model parameters to minimize the difference between model outputs and observations, effectively tuning the model for better accuracy.</p><h2 id="Output-Variables-from-Combined-Experiments-runExperiment-Functions" tabindex="-1">Output Variables from Combined Experiments (<code>runExperiment*</code> Functions) <a class="header-anchor" href="#Output-Variables-from-Combined-Experiments-runExperiment-Functions" aria-label="Permalink to &quot;Output Variables from Combined Experiments (`runExperiment*` Functions) {#Output-Variables-from-Combined-Experiments-runExperiment-Functions}&quot;">​</a></h2><h3 id="1.-Forward-Run-with-Input/Optimized-Parameters" tabindex="-1">1. Forward Run with Input/Optimized Parameters <a class="header-anchor" href="#1.-Forward-Run-with-Input/Optimized-Parameters" aria-label="Permalink to &quot;1. Forward Run with Input/Optimized Parameters {#1.-Forward-Run-with-Input/Optimized-Parameters}&quot;">​</a></h3><p>Run the forward simulation with input parameters that overwrite the defaults.</p><p>Returned NamedTuple fields:</p><ul><li><p><code>forcing</code>: The forcing data used in the experiment.</p></li><li><p><code>info</code>: The full experiment configuration and metadata.</p></li><li><p><code>output</code>: A NamedTuple with two fields:</p><ul><li><p><code>optimized</code>: Model output using optimized parameters.</p></li><li><p><code>default</code>: Model output using default parameters.</p></li></ul></li></ul><h3 id="2.-Optimization-with-Forward-Run-and-Cost-Table" tabindex="-1">2. Optimization with Forward Run and Cost Table <a class="header-anchor" href="#2.-Optimization-with-Forward-Run-and-Cost-Table" aria-label="Permalink to &quot;2. Optimization with Forward Run and Cost Table {#2.-Optimization-with-Forward-Run-and-Cost-Table}&quot;">​</a></h3><p>Do the optimization of model parameters, then a forward run with both sets of parameters, and return them in output. Returned NamedTuple fields:</p><ul><li><p><code>forcing</code>: The forcing data used in the experiment.</p></li><li><p><code>cost_options</code>: The cost function configuration.</p></li><li><p><code>run_helpers</code>: Helper structures for the run.</p></li><li><p><code>info</code>: The experiment configuration.</p></li><li><p><code>loss</code>: A table comparing loss metrics for optimized and default parameters.</p></li><li><p><code>observation</code>: The observation data array.</p></li><li><p><code>output</code>: The model outputs (optimized and default).</p></li><li><p><code>parameters</code>: The optimized parameters.</p></li></ul><h2 id="Output-Variables-from-Special-Experiments" tabindex="-1">Output Variables from Special Experiments <a class="header-anchor" href="#Output-Variables-from-Special-Experiments" aria-label="Permalink to &quot;Output Variables from Special Experiments {#Output-Variables-from-Special-Experiments}&quot;">​</a></h2><h3 id="1.-Full-Output-Mode" tabindex="-1">1. Full Output Mode <a class="header-anchor" href="#1.-Full-Output-Mode" aria-label="Permalink to &quot;1. Full Output Mode {#1.-Full-Output-Mode}&quot;">​</a></h3><p>In this mode, the experiment runs the model with all available variables included in the given model structure written as the output. This ignores the list of output variables in <code>experiment.json</code>. This means it will include all variables present in the model structure. It is primarily intended for debugging purposes but can also be used for comprehensive analysis of the model&#39;s responses.</p><p>Returned NamedTuple fields:</p><ul><li><p><code>forcing</code>: The forcing data used in the experiment.</p></li><li><p><code>info</code>: The full experiment configuration and metadata.</p></li><li><p><code>output</code>: The complete model output for all variables.</p></li></ul><h3 id="2.-Sensitivity-Analysis-Mode" tabindex="-1">2. Sensitivity Analysis Mode <a class="header-anchor" href="#2.-Sensitivity-Analysis-Mode" aria-label="Permalink to &quot;2. Sensitivity Analysis Mode {#2.-Sensitivity-Analysis-Mode}&quot;">​</a></h3><p>In this mode, the experiment performs a sensitivity analysis to determine the influence of various parameters on the model outputs. The output is a NamedTuple containing:</p><ul><li><p><code>forcing</code>: The forcing data used in the experiment.</p></li><li><p><code>info</code>: The experiment configuration and metadata.</p></li><li><p><code>obs_array</code>: An array of observation data used for comparison.</p></li><li><p><code>sensitivity</code>: The results of the sensitivity analysis, detailing the impact of each parameter.</p></li></ul><p>This mode is crucial for understanding which parameters most significantly affect the model&#39;s behavior, aiding in model refinement and optimization.</p><h3 id="3.-Output-from-Hybrid-Modeling-Experiments" tabindex="-1">3. Output from Hybrid Modeling Experiments <a class="header-anchor" href="#3.-Output-from-Hybrid-Modeling-Experiments" aria-label="Permalink to &quot;3. Output from Hybrid Modeling Experiments {#3.-Output-from-Hybrid-Modeling-Experiments}&quot;">​</a></h3><p>The hybrid modeling output are described in the <a href="./hybrid_modeling.html">hybrid modeling documentation</a>.</p>',40)]))}const h=t(r,[["render",n]]);export{m as __pageData,h as default};
