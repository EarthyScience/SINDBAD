import{_ as t,c as i,o as a,aA as s}from"./chunks/framework.CCZvcHlP.js";const m=JSON.parse('{"title":"Parameter Configuration","description":"","frontmatter":{},"headers":[],"relativePath":"pages/settings/parameters.md","filePath":"pages/settings/parameters.md","lastUpdated":null}'),r={name:"pages/settings/parameters.md"};function l(o,e,n,d,p,h){return a(),i("div",null,e[0]||(e[0]=[s(`<h1 id="Parameter-Configuration" tabindex="-1">Parameter Configuration <a class="header-anchor" href="#Parameter-Configuration" aria-label="Permalink to &quot;Parameter Configuration {#Parameter-Configuration}&quot;">​</a></h1><p>SINDBAD enables flexible parameter management, allowing you to run models with custom parameter values instead of the default values defined in each model. This functionality supports:</p><ul><li><p>Forward model runs</p></li><li><p>Parameter optimization experiments</p></li><li><p>Custom parameter values from literature or previous optimizations</p></li></ul><div class="info custom-block"><p class="custom-block-title">Parameter Tables</p><p>SINDBAD stores parameter information in two key locations:</p><ul><li><p><code>info.models.parameter_table</code>: Contains all model parameters defined in the model structure</p></li><li><p><code>info.optimization.parameter_table</code>: Contains parameters selected for optimization (available only when optimization/cost calculation is enabled)</p></li></ul></div><h2 id="Parameter-Input-Methods" tabindex="-1">Parameter Input Methods <a class="header-anchor" href="#Parameter-Input-Methods" aria-label="Permalink to &quot;Parameter Input Methods {#Parameter-Input-Methods}&quot;">​</a></h2><p>You can configure parameters using two complementary methods:</p><ol><li><p><strong>replace_info</strong>: passing a parameter table (hereafter <code>pre-loaded Table</code>) through<code>model_structure.parameter_table</code> in <code>replace_info</code>.</p></li><li><p><strong>CSV File</strong>: Primary method for complete parameter configuration</p></li><li><p><strong>optimization.json</strong>: Additional parameter-specific settings for optimization</p></li></ol><p>Specify the CSV file path in <code>experiment.json</code> under <code>basics/config_files</code>:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;params&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parameterfile.csv&quot;</span></span></code></pre></div><h2 id="Paramter-Table-Structure" tabindex="-1">Paramter Table Structure <a class="header-anchor" href="#Paramter-Table-Structure" aria-label="Permalink to &quot;Paramter Table Structure {#Paramter-Table-Structure}&quot;">​</a></h2><p>The parameter CSV file includes the following columns:</p><table tabindex="0"><thead><tr><th style="text-align:right;">Column</th><th style="text-align:right;">Description</th></tr></thead><tbody><tr><td style="text-align:right;"><code>model_id</code></td><td style="text-align:right;">Unique identifier for the model containing the parameter</td></tr><tr><td style="text-align:right;"><code>name</code></td><td style="text-align:right;">Parameter name within its approach</td></tr><tr><td style="text-align:right;"><code>initial</code></td><td style="text-align:right;">Initial parameter value used in the experiment (uses <code>optimized</code> values if provided, otherwise <code>default</code> values)</td></tr><tr><td style="text-align:right;"><code>default</code></td><td style="text-align:right;">Default parameter value defined in the approach</td></tr><tr><td style="text-align:right;"><code>optimized</code></td><td style="text-align:right;">Optimized parameter value from previous optimization</td></tr><tr><td style="text-align:right;"><code>lower</code></td><td style="text-align:right;">Lower bound constraint for parameter optimization</td></tr><tr><td style="text-align:right;"><code>upper</code></td><td style="text-align:right;">Upper bound constraint for parameter optimization</td></tr><tr><td style="text-align:right;"><code>model</code></td><td style="text-align:right;">Base model name</td></tr><tr><td style="text-align:right;"><code>model_approach</code></td><td style="text-align:right;">Specific approach name</td></tr><tr><td style="text-align:right;"><code>approach_func</code></td><td style="text-align:right;">Function used to instantiate the approach</td></tr><tr><td style="text-align:right;"><code>name_full</code></td><td style="text-align:right;">Full parameter name in &quot;model.parameter&quot; format</td></tr><tr><td style="text-align:right;"><code>dist</code></td><td style="text-align:right;">Parameter distribution type (e.g., &quot;normal&quot;)</td></tr><tr><td style="text-align:right;"><code>p_dist</code></td><td style="text-align:right;">Distribution parameters as a Vector</td></tr><tr><td style="text-align:right;"><code>is_ml</code></td><td style="text-align:right;">Flag indicating if the parameter uses machine learning</td></tr></tbody></table><h2 id="Parameter-Overwriting-Logic" tabindex="-1">Parameter Overwriting Logic <a class="header-anchor" href="#Parameter-Overwriting-Logic" aria-label="Permalink to &quot;Parameter Overwriting Logic {#Parameter-Overwriting-Logic}&quot;">​</a></h2><p>SINDBAD uses parameters defined in approach <code>.jl</code> files by default. You can override these values using the following methods:</p><h3 id="Parameter-Table-Overwriting:" tabindex="-1">Parameter Table Overwriting: <a class="header-anchor" href="#Parameter-Table-Overwriting:" aria-label="Permalink to &quot;Parameter Table Overwriting: {#Parameter-Table-Overwriting:}&quot;">​</a></h3><p>The parameter table to overwrite the defaults can be provided either as a path to the CSV file or directly as a <code>pre-loaded Table</code> when <code>CSV</code> is loaded manually to modify the table on the go).</p><div class="warning custom-block"><p class="custom-block-title">Parameter Precedence</p><ul><li><p>Input parameter table takes precedence over default values</p></li><li><p>Pre-loaded parameter table passed as <code>model_structure.parameter_table</code> takes precedence over the CSV file path.</p></li></ul></div><h3 id="CSV-File/Pre-loaded-Table-Overwriting" tabindex="-1">CSV File/Pre-loaded Table Overwriting <a class="header-anchor" href="#CSV-File/Pre-loaded-Table-Overwriting" aria-label="Permalink to &quot;CSV File/Pre-loaded Table Overwriting {#CSV-File/Pre-loaded-Table-Overwriting}&quot;">​</a></h3><p>When providing a <code>CSV/Table</code>, SINDBAD updates the default parameter table with the input parameter table, modifying:</p><ul><li><p>Initial values</p></li><li><p>Lower and upper bounds</p></li><li><p>All columns except <code>(:model_id, :approach_func)</code></p></li></ul><div class="warning custom-block"><p class="custom-block-title">CSV/Table Format</p><p>The <code>CSV/Table</code> format is generated by SINDBAD during optimization output. Use this format as a template for any parameter modifications.</p></div><h3 id="CSV/Table-Modification-Guidelines" tabindex="-1">CSV/Table Modification Guidelines <a class="header-anchor" href="#CSV/Table-Modification-Guidelines" aria-label="Permalink to &quot;CSV/Table Modification Guidelines {#CSV/Table-Modification-Guidelines}&quot;">​</a></h3><p>When editing the parameter file:</p><ol><li><p>Preserve the field names in the header row</p></li><li><p>Do not add new columns</p></li><li><p>Only modify the following fields:</p></li></ol><ul><li><p><code>:optimized</code> values</p></li><li><p><code>:lower</code> bounds</p></li><li><p><code>:upper</code> bounds</p></li><li><p><code>:dist</code> and <code>:p_dist</code> (for parameter distributions)</p></li></ul><h3 id="JSON-Configuration" tabindex="-1">JSON Configuration <a class="header-anchor" href="#JSON-Configuration" aria-label="Permalink to &quot;JSON Configuration {#JSON-Configuration}&quot;">​</a></h3><p>The <code>optimization.json</code> file provides additional parameter configuration options, taking precedence over <code>CSV/Table</code> input for:</p><ul><li><p><code>:dist</code></p></li><li><p><code>:p_dist</code></p></li><li><p><code>:is_ml</code></p></li></ul><p>Configure parameters in the <code>JSON</code> file using either:</p><ol><li><p><code>model_parameter_default</code> for all optimized parameters</p></li><li><p>Individual entries in <code>model_parameters_to_optimize</code> for specific parameters</p></li></ol><p>To use <code>CSV/Table</code> input exclusively:</p><ul><li><p>Set <code>model_parameter_default</code> to <code>null</code></p></li><li><p>Set <code>model_parameters_to_optimize</code> as a vector of parameters</p></li><li><p>For dictionary format, set each parameter info to <code>null</code></p></li></ul><h2 id="Example-Parameter-CSV/Table" tabindex="-1">Example Parameter CSV/Table <a class="header-anchor" href="#Example-Parameter-CSV/Table" aria-label="Permalink to &quot;Example Parameter CSV/Table {#Example-Parameter-CSV/Table}&quot;">​</a></h2><div class="language-csv vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">csv</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">model_id,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">name,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">actual,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">default,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">optimized,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">lower,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">upper,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">timescale_run,</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">units,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">timescale_ori,units_ori,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">model,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">model_approach,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">approach_func,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">name_full,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">is_ml,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">dist,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">p_dist</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">9,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">constant_frac_max_root_depth,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0.2553059,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">0.5,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0.78262913,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">0.001,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.8,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">,</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rootMaximumDepth,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootMaximumDepth_fracSoilD,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">rootMaximumDepth_fracSoilD,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rootMaximumDepth.constant_frac_max_root_depth,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">false,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">normal,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;Float32[0.0, 1.0]&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">10,</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">k_efficiency_cVegRoot,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">0.0010001105,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">0.02,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">0.001155915,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">0.001,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.3,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">,</span><span style="--shiki-light:#24292E;--shiki-light-font-weight:bold;--shiki-dark:#E1E4E8;--shiki-dark-font-weight:bold;">m2/kgC (inverse of carbon storage),</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,m2/kgC (inverse of carbon storage),</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">rootWaterEfficiency,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">rootWaterEfficiency_expCvegRoot,</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">rootWaterEfficiency_expCvegRoot,</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">rootWaterEfficiency.k_efficiency_cVegRoot,</span><span style="--shiki-light:#E36209;--shiki-dark:#FFAB70;">false,</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">normal,</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">&quot;Float32[0.0, 1.0]&quot;</span></span></code></pre></div><h2 id="Parameter-Validation" tabindex="-1">Parameter Validation <a class="header-anchor" href="#Parameter-Validation" aria-label="Permalink to &quot;Parameter Validation {#Parameter-Validation}&quot;">​</a></h2><p>SINDBAD performs comprehensive parameter validation:</p><ol><li><p><strong>Bounds Checking</strong>: Ensures parameter values fall within specified ranges</p></li><li><p><strong>Unit Conversion</strong>: Handles unit conversions based on timescales</p></li><li><p><strong>Time Step Consistency</strong>: Converts parameters to units consistent with the current model run time step by comparing <code>timescale_run</code> with the experiment model time step</p></li></ol><div class="tip custom-block"><p class="custom-block-title">Verification</p><p>Always verify parameter values and units in:</p><ul><li><p><code>info.models.parameter_table</code> for full model parameters</p></li><li><p><code>info.optimization.parameter_table</code> (for CSV/Table subset when optimization or cost calculation is enabled)</p></li></ul></div>`,38)]))}const g=t(r,[["render",l]]);export{m as __pageData,g as default};
