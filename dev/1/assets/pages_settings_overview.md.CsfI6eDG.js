import{_ as e,c as i,o as a,aA as n}from"./chunks/framework.Cow1Yd9I.js";const g=JSON.parse('{"title":"SINDBAD Configuration Overview","description":"","frontmatter":{},"headers":[],"relativePath":"pages/settings/overview.md","filePath":"pages/settings/overview.md","lastUpdated":null}'),l={name:"pages/settings/overview.md"};function o(r,t,s,d,c,f){return a(),i("div",null,[...t[0]||(t[0]=[n('<h1 id="SINDBAD-Configuration-Overview" tabindex="-1">SINDBAD Configuration Overview <a class="header-anchor" href="#SINDBAD-Configuration-Overview" aria-label="Permalink to &quot;SINDBAD Configuration Overview {#SINDBAD-Configuration-Overview}&quot;">​</a></h1><p>SINDBAD provides a flexible configuration system that adapts to different model structures and data integration approaches, tailored to specific scientific objectives and challenges.</p><p>Unlike traditional modeling experiments that require code modifications or additional scripts, SINDBAD uses <strong>JSON configuration files</strong> to define all necessary settings for running experiments. This approach enables seamless integration of terrestrial ecosystem models with various model-data integration strategies.</p><h2 id="Configuration-Files" tabindex="-1">Configuration Files <a class="header-anchor" href="#Configuration-Files" aria-label="Permalink to &quot;Configuration Files {#Configuration-Files}&quot;">​</a></h2><p>The following table outlines SINDBAD&#39;s main configuration files:</p><table tabindex="0"><thead><tr><th style="text-align:left;">#</th><th style="text-align:left;">File</th><th style="text-align:center;">Required</th><th style="text-align:left;">Purpose</th></tr></thead><tbody><tr><td style="text-align:left;">1</td><td style="text-align:left;"><a href="./experiment.html">Experiment</a></td><td style="text-align:center;">Yes</td><td style="text-align:left;">Defines experiment basics and simulation settings</td></tr><tr><td style="text-align:left;">2</td><td style="text-align:left;"><a href="./forcing.html">Forcing</a></td><td style="text-align:center;">Yes</td><td style="text-align:left;">Configures forcing dataset specifications</td></tr><tr><td style="text-align:left;">3</td><td style="text-align:left;"><a href="./model_structure.html">Model Structure</a></td><td style="text-align:center;">Yes</td><td style="text-align:left;">Defines model processes and pools</td></tr><tr><td style="text-align:left;">4</td><td style="text-align:left;"><a href="./optimization.html">Optimization</a></td><td style="text-align:center;">No</td><td style="text-align:left;">Configures parameter optimization and model performance evaluation</td></tr><tr><td style="text-align:left;">5</td><td style="text-align:left;"><a href="./parameters.html">Parameters</a></td><td style="text-align:center;">No</td><td style="text-align:left;">Specifies non-default parameter values for experiments</td></tr></tbody></table><div class="tip custom-block"><p class="custom-block-title">Best Practices</p><ul><li><p>Store all configuration files for an experiment in a dedicated directory within the <strong>settings_</strong>* folder of your SINDBAD experiments directory</p></li><li><p>Use descriptive file names that clearly associate configurations with specific experiments</p></li><li><p>Maintain a clear naming convention to ensure traceability and reproducibility</p></li><li><p>Reference the example configurations in the <code>examples</code> directory as templates</p></li></ul></div><div class="info custom-block"><p class="custom-block-title">Configuration Management</p><ul><li><p>Each experiment should have its own configuration directory</p></li><li><p>Version control your configuration files to track changes</p></li><li><p>Document any modifications to default settings</p></li><li><p>Keep configuration files organized and well-documented</p></li></ul></div>',8)])])}const u=e(l,[["render",o]]);export{g as __pageData,u as default};
