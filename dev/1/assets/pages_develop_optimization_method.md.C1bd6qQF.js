import{_ as s,c as a,o as t,aA as n}from"./chunks/framework.IgPV_Q4b.js";const c=JSON.parse('{"title":"Optimization Methods in SINDBAD","description":"","frontmatter":{},"headers":[],"relativePath":"pages/develop/optimization_method.md","filePath":"pages/develop/optimization_method.md","lastUpdated":null}'),e={name:"pages/develop/optimization_method.md"};function l(p,i,o,h,r,d){return t(),a("div",null,i[0]||(i[0]=[n(`<h1 id="Optimization-Methods-in-SINDBAD" tabindex="-1">Optimization Methods in SINDBAD <a class="header-anchor" href="#Optimization-Methods-in-SINDBAD" aria-label="Permalink to &quot;Optimization Methods in SINDBAD {#Optimization-Methods-in-SINDBAD}&quot;">​</a></h1><p>This documentation provides a comprehensive overview of optimization methods in SINDBAD, including available methods, configuration settings, and how to implement new ones.</p><h2 id="Overview" tabindex="-1">Overview <a class="header-anchor" href="#Overview" aria-label="Permalink to &quot;Overview {#Overview}&quot;">​</a></h2><p>SINDBAD uses a type-based dispatch system for optimization methods, allowing for flexible and extensible optimization approaches. The optimization process is configured through JSON files and can be customized for different experiments.</p><h2 id="Configuration" tabindex="-1">Configuration <a class="header-anchor" href="#Configuration" aria-label="Permalink to &quot;Configuration {#Configuration}&quot;">​</a></h2><p>Optimization settings are defined in the <code>optimization.json</code> file:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;algorithm_optimization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;opti_algorithms/CMAEvolutionStrategy_CMAES.json&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;model_parameters_to_optimize&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;autoRespiration,RMN&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;gppAirT,opt_airT&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">null</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;multi_constraint_method&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;metric_sum&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;observational_constraints&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: [</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;gpp&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;nee&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">    &quot;reco&quot;</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  ],</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;observations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;default_cost&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;cost_metric&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;NSE_inv&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">      &quot;cost_weight&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><p>Key components:</p><ul><li><p><code>algorithm_optimization</code>: Path to the optimization algorithm configuration or direct algorithm name</p></li><li><p><code>model_parameters_to_optimize</code>: Parameters to be optimized</p></li><li><p><code>multi_constraint_method</code>: Method for combining multiple constraints</p></li><li><p><code>observational_constraints</code>: Variables to be used as constraints</p></li><li><p><code>observations</code>: Cost metric and weight settings</p></li></ul><h3 id="Algorithm-Optimization-Configuration" tabindex="-1">Algorithm Optimization Configuration <a class="header-anchor" href="#Algorithm-Optimization-Configuration" aria-label="Permalink to &quot;Algorithm Optimization Configuration {#Algorithm-Optimization-Configuration}&quot;">​</a></h3><p>The <code>algorithm_optimization</code> field can be specified in two ways:</p><ol><li><strong>Path to JSON File</strong></li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;algorithm_optimization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;opti_algorithms/CMAEvolutionStrategy_CMAES.json&quot;</span></span></code></pre></div><p>This points to a JSON file containing the algorithm configuration, which should include:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;algorithm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CMAEvolutionStrategy_CMAES&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;parameters&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;max_iterations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;tolerance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1e-6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;population_size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><ol start="2"><li><strong>Direct Algorithm Name</strong></li></ol><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;algorithm_optimization&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;CMAEvolutionStrategy_CMAES&quot;</span></span></code></pre></div><p>When specified as a string, it uses default parameters for the algorithm.</p><div class="info custom-block"><p class="custom-block-title">INFO</p><p>Using a JSON file for <code>algorithm_optimization</code> allows for:</p><ul><li><p>Custom parameter tuning</p></li><li><p>Different configurations for different experiments</p></li><li><p>Easy switching between algorithm settings</p></li></ul></div><h2 id="Available-Optimization-Methods" tabindex="-1">Available Optimization Methods <a class="header-anchor" href="#Available-Optimization-Methods" aria-label="Permalink to &quot;Available Optimization Methods {#Available-Optimization-Methods}&quot;">​</a></h2><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To list all available optimization methods and their purposes, use:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Sindbad</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">showMethodsOf</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(OptimizationMethod)</span></span></code></pre></div><p>This will display a formatted list of all optimization methods and their descriptions.</p></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To get default options for any optimization method, use <code>sindbadDefaultOptions</code>:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get default options for CMA-ES</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">opts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sindbadDefaultOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">CMAEvolutionStrategyCMAES</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Returns: (maxfevals = 50,)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get default options for Morris method</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">opts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sindbadDefaultOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GSAMorris</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Returns: (total_num_trajectory = 200, num_trajectory = 15, len_design_mat = 10)</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Get default options for Sobol method</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">opts </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> sindbadDefaultOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">GSASobol</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Returns: (samples = 5, method_options = (order = [0, 1],), sampler = &quot;Sobol&quot;, sampler_options = ())</span></span></code></pre></div><p>These default options can be used as a starting point for customizing optimization parameters in your configuration files.</p></div><p>Current methods include:</p><h3 id="Bayesian-Optimization" tabindex="-1">Bayesian Optimization <a class="header-anchor" href="#Bayesian-Optimization" aria-label="Permalink to &quot;Bayesian Optimization {#Bayesian-Optimization}&quot;">​</a></h3><ul><li><code>BayesOptKMaternARD5</code>: Bayesian Optimization using Matern 5/2 kernel with Automatic Relevance Determination from BayesOpt.jl</li></ul><h3 id="Evolution-Strategies" tabindex="-1">Evolution Strategies <a class="header-anchor" href="#Evolution-Strategies" aria-label="Permalink to &quot;Evolution Strategies {#Evolution-Strategies}&quot;">​</a></h3><ul><li><p><code>CMAEvolutionStrategyCMAES</code>: Covariance Matrix Adaptation Evolution Strategy (CMA-ES) from CMAEvolutionStrategy.jl</p></li><li><p><code>EvolutionaryCMAES</code>: CMA-ES implementation from Evolutionary.jl</p></li></ul><h3 id="Gradient-based-Methods" tabindex="-1">Gradient-based Methods <a class="header-anchor" href="#Gradient-based-Methods" aria-label="Permalink to &quot;Gradient-based Methods {#Gradient-based-Methods}&quot;">​</a></h3><ul><li><p><code>OptimLBFGS</code>: Limited-memory BFGS method from Optim.jl</p></li><li><p><code>OptimBFGS</code>: BFGS method from Optim.jl</p></li><li><p><code>OptimizationBFGS</code>: BFGS method from Optimization.jl</p></li><li><p><code>OptimizationFminboxGradientDescent</code>: Fminbox Gradient Descent method from Optimization.jl</p></li><li><p><code>OptimizationFminboxGradientDescentFD</code>: Fminbox Gradient Descent with forward differentiation from Optimization.jl</p></li></ul><h3 id="Black-Box-Optimization" tabindex="-1">Black Box Optimization <a class="header-anchor" href="#Black-Box-Optimization" aria-label="Permalink to &quot;Black Box Optimization {#Black-Box-Optimization}&quot;">​</a></h3><ul><li><p><code>OptimizationBBOadaptive</code>: Black Box Optimization (adaptive) method from Optimization.jl</p></li><li><p><code>OptimizationBBOxnes</code>: Black Box Optimization (xNES) method from Optimization.jl</p></li></ul><h3 id="Other-Methods" tabindex="-1">Other Methods <a class="header-anchor" href="#Other-Methods" aria-label="Permalink to &quot;Other Methods {#Other-Methods}&quot;">​</a></h3><ul><li><p><code>OptimizationGCMAESDef</code>: GCMAES method from Optimization.jl</p></li><li><p><code>OptimizationGCMAESFD</code>: GCMAES method with forward differentiation from Optimization.jl</p></li><li><p><code>OptimizationMultistartOptimization</code>: Multistart Optimization method from Optimization.jl</p></li><li><p><code>OptimizationNelderMead</code>: Nelder-Mead method from Optimization.jl</p></li><li><p><code>OptimizationQuadDirect</code>: QuadDIRECT method from Optimization.jl</p></li></ul><h2 id="Adding-a-New-Optimization-Method" tabindex="-1">Adding a New Optimization Method <a class="header-anchor" href="#Adding-a-New-Optimization-Method" aria-label="Permalink to &quot;Adding a New Optimization Method {#Adding-a-New-Optimization-Method}&quot;">​</a></h2><h3 id="1.-Define-the-New-Optimization-Method-Type" tabindex="-1">1. Define the New Optimization Method Type <a class="header-anchor" href="#1.-Define-the-New-Optimization-Method-Type" aria-label="Permalink to &quot;1. Define the New Optimization Method Type {#1.-Define-the-New-Optimization-Method-Type}&quot;">​</a></h3><p>In <code>src/Types/OptimizationTypes.jl</code>, add a new struct that subtypes <code>OptimizationMethod</code>:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">import</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SindbadUtils</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">:</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> purpose</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define the new optimization type</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> YourNewOptimizationMethod </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> OptimizationMethod</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span>
<span class="line"></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Define its purpose</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">purpose</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Type{YourNewOptimizationMethod}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;"> &quot;Description of what YourNewOptimizationMethod does&quot;</span></span></code></pre></div><div class="info custom-block"><p class="custom-block-title">INFO</p><p>When naming new optimization types that use external packages, follow the convention <code>PackageNameMethodName</code>. For example:</p><ul><li><p><code>CMAEvolutionStrategyCMAES</code> for the CMA-ES method from CMAEvolutionStrategy.jl</p></li><li><p><code>OptimizationBFGS</code> for the BFGS method from Optimization.jl</p></li><li><p><code>BayesOptKMaternARD5</code> for the Matern 5/2 kernel method from BayesOpt.jl</p></li></ul><p>This convention helps identify both the package and the specific method being used.</p></div><h3 id="2.-Set-Default-Options" tabindex="-1">2. Set Default Options <a class="header-anchor" href="#2.-Set-Default-Options" aria-label="Permalink to &quot;2. Set Default Options {#2.-Set-Default-Options}&quot;">​</a></h3><p>In <code>defaultOptions.jl</code>, add default options for your new optimization method:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Add default options for your new method</span></span>
<span class="line"><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">sindbadDefaultOptions</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YourNewOptimizationMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    max_iterations </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    tolerance </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 1e-6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    population_size </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> 50</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Add other default parameters specific to your method</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>When setting default options:</p><ol><li><p>Choose reasonable default values that work well for most cases</p></li><li><p>Include all essential parameters needed by the optimization method</p></li><li><p>Use descriptive parameter names that match the underlying package&#39;s terminology</p></li><li><p>Consider adding parameters for:</p></li></ol><ul><li><p>Convergence criteria (e.g., <code>max_iterations</code>, <code>tolerance</code>)</p></li><li><p>Population/ensemble settings (e.g., <code>population_size</code>)</p></li><li><p>Algorithm-specific parameters</p></li><li><p>Performance tuning options</p></li></ul></div><div class="warning custom-block"><p class="custom-block-title">Make sure:</p><ol><li><p>Test the default options with different problem sizes</p></li><li><p>Consider adding validation for parameter values in your implementation</p></li><li><p>Keep the default options simple but flexible enough for common use cases</p></li></ol></div><h3 id="3.-Implement-the-Optimization-Function" tabindex="-1">3. Implement the Optimization Function <a class="header-anchor" href="#3.-Implement-the-Optimization-Function" aria-label="Permalink to &quot;3. Implement the Optimization Function {#3.-Implement-the-Optimization-Function}&quot;">​</a></h3><p>In <code>optimizer.jl</code>, implement your optimization function with the following signature:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cost_function, default_values, lower_bounds, upper_bounds, algo_options, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YourNewOptimizationMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Your implementation here</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>The function should:</p><ol><li><p>Set up the optimization problem</p></li><li><p>Configure the algorithm parameters</p></li><li><p>Run the optimization</p></li><li><p>Return the results</p></li></ol><p>Example implementation structure:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> optimizer</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(cost_function, default_values, lower_bounds, upper_bounds, algo_options, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">YourNewOptimizationMethod</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Set up optimization problem</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    problem </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> OptimizationProblem</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        cost_function,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        default_values,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        lower_bounds,</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">        upper_bounds</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Configure algorithm</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    algorithm </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> YourAlgorithm</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(; algo_options</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">...</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">    # Run optimization</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    result </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> optimize</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(problem, algorithm)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    </span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> result</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><h3 id="4.-Update-Algorithm-Configuration-if-needed" tabindex="-1">4. Update Algorithm Configuration (if needed) <a class="header-anchor" href="#4.-Update-Algorithm-Configuration-if-needed" aria-label="Permalink to &quot;4. Update Algorithm Configuration (if needed) {#4.-Update-Algorithm-Configuration-if-needed}&quot;">​</a></h3><p>If your method requires special configuration, update the algorithm configuration file:</p><div class="language-json vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">json</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">{</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;algorithm&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;your_new_method&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">  &quot;parameters&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: {</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;max_iterations&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1000</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;tolerance&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1e-6</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">    &quot;population_size&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">: </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">50</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div><h2 id="Important-Considerations" tabindex="-1">Important Considerations <a class="header-anchor" href="#Important-Considerations" aria-label="Permalink to &quot;Important Considerations {#Important-Considerations}&quot;">​</a></h2><ol><li><strong>Parameter Handling</strong></li></ol><ul><li><p>Ensure proper handling of parameter bounds</p></li><li><p>Implement appropriate scaling if needed</p></li><li><p>Consider parameter constraints</p></li></ul><ol start="2"><li><strong>Performance</strong></li></ol><ul><li><p>Optimize for large parameter sets</p></li><li><p>Consider parallelization opportunities</p></li><li><p>Implement efficient memory management</p></li></ul><ol start="3"><li><strong>Convergence</strong></li></ol><ul><li><p>Set appropriate stopping criteria</p></li><li><p>Handle numerical stability</p></li><li><p>Implement error handling</p></li></ul><ol start="4"><li><strong>Documentation</strong></li></ol><ul><li><p>Add comprehensive docstrings</p></li><li><p>Include usage examples</p></li><li><p>Document any special requirements</p></li></ul><h2 id="Testing" tabindex="-1">Testing <a class="header-anchor" href="#Testing" aria-label="Permalink to &quot;Testing {#Testing}&quot;">​</a></h2><p>After implementing your new optimization method:</p><ol><li><p>Test with small parameter sets</p></li><li><p>Verify convergence behavior</p></li><li><p>Check performance with larger parameter sets</p></li><li><p>Ensure compatibility with different cost functions</p></li></ol><h2 id="Best-Practices" tabindex="-1">Best Practices <a class="header-anchor" href="#Best-Practices" aria-label="Permalink to &quot;Best Practices {#Best-Practices}&quot;">​</a></h2><ol><li><strong>Algorithm Selection</strong></li></ol><ul><li><p>Choose appropriate algorithm for the problem type</p></li><li><p>Consider problem dimensionality</p></li><li><p>Account for computational resources</p></li></ul><ol start="2"><li><strong>Parameter Configuration</strong></li></ol><ul><li><p>Set reasonable bounds</p></li><li><p>Configure appropriate stopping criteria</p></li><li><p>Adjust population sizes if needed</p></li></ul><ol start="3"><li><strong>Performance Optimization</strong></li></ol><ul><li><p>Implement efficient data structures</p></li><li><p>Consider parallelization</p></li><li><p>Optimize memory usage</p></li></ul><ol start="4"><li><strong>Error Handling</strong></li></ol><ul><li><p>Handle numerical instabilities</p></li><li><p>Implement appropriate fallbacks</p></li><li><p>Provide informative error messages</p></li></ul>`,74)]))}const g=s(e,[["render",l]]);export{c as __pageData,g as default};
