import{_ as s,c as a,o as i,aA as t}from"./chunks/framework.C07RQYAL.js";const u=JSON.parse('{"title":"SINDBAD TEM","description":"","frontmatter":{},"headers":[],"relativePath":"pages/concept/TEM.md","filePath":"pages/concept/TEM.md","lastUpdated":null}'),o={name:"pages/concept/TEM.md"};function n(l,e,r,d,p,c){return i(),a("div",null,e[0]||(e[0]=[t(`<h1 id="sindbad-tem" tabindex="-1">SINDBAD TEM <a class="header-anchor" href="#sindbad-tem" aria-label="Permalink to &quot;SINDBAD TEM&quot;">​</a></h1><p>In SINDBAD, the Terrestrial Ecosystem Model (TEM) is a core component of the MDI framework. It encompasses ecosystem processes, approaches to model these processes, and the orchestration of their execution, including spinup, time loops, and other components.</p><h2 id="Ecosystem-Processes" tabindex="-1">Ecosystem Processes <a class="header-anchor" href="#Ecosystem-Processes" aria-label="Permalink to &quot;Ecosystem Processes {#Ecosystem-Processes}&quot;">​</a></h2><h3 id="SINDBAD-Model" tabindex="-1">SINDBAD Model <a class="header-anchor" href="#SINDBAD-Model" aria-label="Permalink to &quot;SINDBAD Model {#SINDBAD-Model}&quot;">​</a></h3><p>A Model represents an ecosystem process that can be modeled using various methods. Each model focuses on a specific process that cannot be further divided. For example, instead of modeling the broad process of <code>photosynthesis</code>, it can be broken into smaller components like <code>radiation use</code> or <code>transpiration</code>, which are modeled individually and combined to represent the larger process.</p><h3 id="SINDBAD-Approach" tabindex="-1">SINDBAD Approach <a class="header-anchor" href="#SINDBAD-Approach" aria-label="Permalink to &quot;SINDBAD Approach {#SINDBAD-Approach}&quot;">​</a></h3><p>An Approach is a method to calculate or emulate a process defined by a SINDBAD Model. For instance, the process of <code>baseflow</code> generation can be modeled using a <code>linear</code> approach, where baseflow is calculated as a linear function of groundwater storage.</p><h3 id="Approach-Methods" tabindex="-1">Approach Methods <a class="header-anchor" href="#Approach-Methods" aria-label="Permalink to &quot;Approach Methods {#Approach-Methods}&quot;">​</a></h3><p>The following core methods are defined for every SINDBAD approach:</p><ul><li><p><code>define</code>: Initializes memory-allocating variables and arrays required for the approach.</p></li><li><p><code>precompute</code>: Updates defined variables and arrays with new realizations based on model parameters or forcing data, preparing the model for time-dependent computations.</p></li><li><p><code>compute</code>: Advances the model state in time by applying dynamic updates using precomputed variables and forcing data for the current time step.</p></li><li><p><code>update</code>: Optionally modifies pools and variables within a single time step.</p></li></ul><h2 id="Parameters-and-Inversion" tabindex="-1">Parameters and Inversion <a class="header-anchor" href="#Parameters-and-Inversion" aria-label="Permalink to &quot;Parameters and Inversion {#Parameters-and-Inversion}&quot;">​</a></h2><p>In SINDBAD, <code>Model parameters</code> are critical components that control the response of a modeled process. These parameters are often uncertain and can be estimated using <code>model/parameter inversion methods</code>. Inversion broadly includes techniques such as:</p><ul><li><p>Parameter calibration (modeling principles),</p></li><li><p>Optimization (mathematical methods),</p></li><li><p>Parameter learning (machine learning).</p></li></ul><h2 id="Ecosystem-Model" tabindex="-1">Ecosystem Model <a class="header-anchor" href="#Ecosystem-Model" aria-label="Permalink to &quot;Ecosystem Model {#Ecosystem-Model}&quot;">​</a></h2><p>An Ecosystem Model is the core of SINDBAD&#39;s modeling framework. It includes:</p><ul><li><p>A combination of ecosystem processes.</p></li><li><p>Methods to execute these processes, such as spinup, time-stepping, or one-time initialization.</p></li></ul><h3 id="Model-Structure" tabindex="-1">Model Structure <a class="header-anchor" href="#Model-Structure" aria-label="Permalink to &quot;Model Structure {#Model-Structure}&quot;">​</a></h3><p>A Model Structure is a collection of ecosystem processes designed for a specific scientific goal. It includes a set of SINDBAD models, each with a defined approach for the experiment. SINDBAD allows full flexibility to <em>lego-build</em> model structures through settings.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p>Models may have dependencies. For example, if <code>fAPAR</code> depends on <code>LAI</code>, the <em>model structure must include LAI</em>.</p></div><p>The default model structure is stored in the standard_sindbad_models variable, which can be overridden during experimental setup.</p><p>Example:</p><p>To override the default model structure, pass it through the <code>replace_info</code> in experimental setup. For example, a <em>hypothetical ecosystem model</em> that can simulate vegetation growth while considering water limitations can be used to replace the standard models as,</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hypothetical_models </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        :radiation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,      </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Handles radiation use</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        :transpiration</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,  </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Manages water use</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        :soilwater</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,     </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Controls soil moisture</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        :allocation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">,    </span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Distributes resources</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">        :turnover</span><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;">       # Handles biomass changes</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    )</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    hypothetical_replace_info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> (;</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;model_structure.sindbad_models&quot;</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =&gt;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> hypothetical_models)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    info </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getExperimentInfo</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(experiment_json; replace_info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">hypothetical_replace_info);</span></span></code></pre></div><div class="tip custom-block"><p class="custom-block-title">TIP</p><p>To view standard and all available SINDBAD models:</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> Sindbad</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">standard_sindbad_models</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">all_available_sindbad_models</span></span></code></pre></div></div><h3 id="Model-Selection" tabindex="-1">Model Selection <a class="header-anchor" href="#Model-Selection" aria-label="Permalink to &quot;Model Selection {#Model-Selection}&quot;">​</a></h3><p>From the list of standard models or user-defined variant of it, which can be a subset of all available sindbad models, an experiment can select a set of models suited for the goal. This is so called <code>selected_models</code> of an experiment which are <a href="./../settings/model_structure">set through model structure settings</a>.</p><h2 id="runtem" tabindex="-1">runTEM <a class="header-anchor" href="#runtem" aria-label="Permalink to &quot;runTEM&quot;">​</a></h2><p>The runTEM component/function orchestrates the execution of the SINDBAD TEM. It includes initialization, spinup, and time-stepping processes for the selected model structure.</p><ul><li><p><code>coreTEM</code>: Handles the core execution of the SINDBAD TEM, including precomputation, spinup, and time-stepping.</p></li><li><p><code>timeLoopTEM</code>: Executes the time loop for the SINDBAD TEM, updating the land state for each time step.</p></li><li><p><code>computeTEM</code>: Executes the compute function for all selected models, updating the land state for a given time step.</p></li><li><p><code>defineTEM</code>: Executes the define function for all selected models, initializing variables and arrays.</p></li></ul><p><code>precomputeTEM</code>: Executes the precompute function for all selected models, updating variables and arrays based on new realizations.</p><h1 id="spinup" tabindex="-1">Spinup <a class="header-anchor" href="#spinup" aria-label="Permalink to &quot;Spinup&quot;">​</a></h1><p>In SINDBAD, Spinup is a sequence of steps within a larger model simulation. Its purpose is to bring ecosystem states and pools to equilibrium for a given set of climate conditions, model parameters, and land characteristics. Spinup ensures that the model starts from a stable state before proceeding with time-dependent calculations.</p>`,32)]))}const m=s(o,[["render",n]]);export{u as __pageData,m as default};
