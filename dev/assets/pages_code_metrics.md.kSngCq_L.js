import{_ as n,C as p,c as o,o as r,j as s,aA as t,a,G as l}from"./chunks/framework.C07RQYAL.js";const x=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/code/metrics.md","filePath":"pages/code/metrics.md","lastUpdated":null}'),d={name:"pages/code/metrics.md"},h={class:"jldocstring custom-block",open:""},c={class:"jldocstring custom-block",open:""},k={class:"jldocstring custom-block",open:""},g={class:"jldocstring custom-block",open:""},u={class:"jldocstring custom-block",open:""},m={class:"jldocstring custom-block",open:""},y={class:"jldocstring custom-block",open:""},E={class:"jldocstring custom-block",open:""},b={class:"jldocstring custom-block",open:""},f={class:"jldocstring custom-block",open:""},C={class:"jldocstring custom-block",open:""},_={class:"jldocstring custom-block",open:""},v={class:"jldocstring custom-block",open:""},F={class:"jldocstring custom-block",open:""},A={class:"jldocstring custom-block",open:""},S={class:"jldocstring custom-block",open:""},T={class:"jldocstring custom-block",open:""};function j(D,i,B,M,N,P){const e=p("Badge");return r(),o("div",null,[s("details",h,[s("summary",null,[i[0]||(i[0]=s("a",{id:"SindbadMetrics",href:"#SindbadMetrics"},[s("span",{class:"jlbinding"},"SindbadMetrics")],-1)),i[1]||(i[1]=a()),l(e,{type:"info",class:"jlObjectType jlModule",text:"Module"})]),i[2]||(i[2]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">SindbadMetrics</span></span></code></pre></div><p>The <code>SindbadMetrics</code> package provides tools for evaluating the performance of SINDBAD models. It includes a variety of metrics for comparing model outputs with observations, calculating statistical measures, and updating model parameters based on evaluation results.</p><p><strong>Purpose:</strong></p><p>This package is designed to define and compute metrics that assess the accuracy and reliability of SINDBAD models. It supports a wide range of statistical and performance metrics, enabling robust model evaluation and calibration.</p><p>It has heavy usage in <code>SindbadOptimization</code> but the package is separated to reduce to import burdens of optimization schemes. This allows for import into independent workflows for model evaluation and parameter estimation, e.g., in hybrid modeling.</p><p><strong>Dependencies:</strong></p><ul><li><p><code>SindbadUtils</code>: Provides utility functions for handling data and NamedTuples, which are essential for metric calculations.</p></li><li><p><code>StatsBase</code>: Supplies statistical functions such as <code>mean</code>, <code>percentile</code>, <code>cor</code>, and <code>corspearman</code> for computing metrics like correlation and distribution-based statistics.</p></li></ul><p><strong>Included Files:</strong></p><ol><li><strong><code>metricTypes.jl</code></strong>:</li></ol><ul><li>Defines types and structures for organizing and managing metrics in SINDBAD experiments.</li></ul><ol start="2"><li><strong><code>handleDataForLoss.jl</code></strong>:</li></ol><ul><li>Implements functions for preprocessing and handling data before calculating loss functions or metrics.</li></ul><ol start="3"><li><strong><code>getMetrics.jl</code></strong>:</li></ol><ul><li>Provides functions for retrieving and organizing metrics based on model outputs and observations.</li></ul><ol start="4"><li><strong><code>metrics.jl</code></strong>:</li></ol><ul><li>Contains the core metric definitions, including statistical measures (e.g., RMSE, correlation) and custom metrics for SINDBAD experiments.</li></ul><ol start="5"><li><strong><code>updateParameters.jl</code></strong>:</li></ol><ul><li>Implements logic for updating model parameters based on metric evaluations, enabling iterative model calibration.</li></ul><div class="tip custom-block"><p class="custom-block-title">Note</p><ul><li><p>The package is designed to be extensible, allowing users to define custom metrics for specific use cases.</p></li><li><p>Metrics are computed in a modular fashion, ensuring compatibility with SINDBAD&#39;s optimization and evaluation workflows.</p></li><li><p>Supports both standard statistical metrics and domain-specific metrics tailored to SINDBAD experiments.</p></li></ul></div><p><strong>Examples:</strong></p><ol><li><strong>Calculating RMSE</strong>:</li></ol><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SindbadMetrics</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">rmse </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> calculateRMSE</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model_output, observations)</span></span></code></pre></div><ol><li><strong>Computing correlation</strong>:</li></ol><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SindbadMetrics</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">correlation </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> calculateCorrelation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model_output, observations)</span></span></code></pre></div><ol><li><strong>Updating parameters based on metrics</strong>:</li></ol><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SindbadMetrics</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">updated_params </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> updateParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(current_params, metrics)</span></span></code></pre></div>`,26))]),i[51]||(i[51]=s("h2",{id:"exported",tabindex:"-1"},[a("Exported "),s("a",{class:"header-anchor",href:"#exported","aria-label":'Permalink to "Exported"'},"â€‹")],-1)),s("details",c,[s("summary",null,[i[3]||(i[3]=s("a",{id:"SindbadMetrics.backScaleParameters",href:"#SindbadMetrics.backScaleParameters"},[s("span",{class:"jlbinding"},"SindbadMetrics.backScaleParameters")],-1)),i[4]||(i[4]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[5]||(i[5]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">backScaleParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_vector_scaled, tbl_params, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SindbadParameterScaling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Reverts scaling of parameters using a specified scaling strategy.</p><p><strong>Arguments</strong></p><ul><li><p><code>param_vector_scaled</code>: Vector of scaled parameters to be converted back to original scale</p></li><li><p><code>tbl_params</code>: Table containing parameter information and scaling factors</p></li><li><p><code>SindbadParameterScaling</code>: Type indicating the scaling strategy to be used</p><ul><li><p><code>::ScaleDefault</code>: Type indicating scaling by default values</p></li><li><p><code>::ScaleBounds</code>: Type indicating scaling by parameter bounds</p></li><li><p><code>::ScaleNone</code>: Type indicating no scaling should be applied (parameters remain unchanged)</p></li></ul></li></ul><p><strong>Returns</strong></p><p>Returns the unscaled/actual parameter vector in original units.</p>',6))]),s("details",k,[s("summary",null,[i[6]||(i[6]=s("a",{id:"SindbadMetrics.checkParameterBounds-Tuple{Any, Any, Any, Any, SindbadParameterScaling}",href:"#SindbadMetrics.checkParameterBounds-Tuple{Any, Any, Any, Any, SindbadParameterScaling}"},[s("span",{class:"jlbinding"},"SindbadMetrics.checkParameterBounds")],-1)),i[7]||(i[7]=a()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[8]||(i[8]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">checkParameterBounds</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p_names, default_values, lower_bounds, upper_bounds, _sc</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SindbadParameterScaling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">; show_info</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">false</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, model_names</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">nothing</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Check and display the parameter bounds information for given parameters.</p><p><strong>Arguments</strong></p><ul><li><p><code>p_names</code>: Names or identifier of the parameters. Vector of strings.</p></li><li><p><code>default_values</code>: Default values of the parameters. Vector of Numbers.</p></li><li><p><code>lower_bounds</code>: Lower bounds for the parameters. Vector of Numbers.</p></li><li><p><code>upper_bounds</code>: Upper bounds for the parameters. Vector of Numbers.</p></li><li><p><code>_sc::SindbadParameterScaling</code>: Scaling Type for the parameters</p></li><li><p><code>show_info</code>: a flag to display model parameters and their bounds. Boolean.</p></li><li><p><code>model_names</code>: Names or identifier of the approaches where the parameters are defined.</p></li></ul><p><strong>Returns</strong></p><p>Displays a formatted output of parameter bounds information or returns an error when they are violated</p>',6))]),s("details",g,[s("summary",null,[i[9]||(i[9]=s("a",{id:"SindbadMetrics.combineMetric",href:"#SindbadMetrics.combineMetric"},[s("span",{class:"jlbinding"},"SindbadMetrics.combineMetric")],-1)),i[10]||(i[10]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[11]||(i[11]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">combineMetric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(metric_vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MetricSum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">combineMetric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(metric_vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MetricMinimum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">combineMetric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(metric_vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">MetricMaximum</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">combineMetric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(metric_vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, percentile_value</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">T</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>combines the metric from all constraints based on the type of combination.</p><p><strong>Arguments:</strong></p><ul><li><code>metric_vector</code>: a vector of metrics for variables</li></ul><p><strong>methods for combining the metric</strong></p><ul><li><p><code>::MetricSum</code>: return the total sum as the metric.</p></li><li><p><code>::MetricMinimum</code>: return the minimum of the <code>metric_vector</code> as the metric.</p></li><li><p><code>::MetricMaximum</code>: return the maximum of the <code>metric_vector</code> as the metric.</p></li><li><p><code>percentile_value::T</code>: <code>percentile_value^th</code> percentile of metric of each constraint as the overall metric</p></li></ul>`,6))]),s("details",u,[s("summary",null,[i[12]||(i[12]=s("a",{id:"SindbadMetrics.getData",href:"#SindbadMetrics.getData"},[s("span",{class:"jlbinding"},"SindbadMetrics.getData")],-1)),i[13]||(i[13]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[14]||(i[14]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model_output</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LandWrapper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, observations, cost_option)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model_output</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, observations, cost_option)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model_output</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, observations, cost_option)</span></span></code></pre></div><p><strong>Arguments:</strong></p><ul><li><p><code>model_output</code>: a collection of SINDBAD model output time series as a time series of stacked land NT or as a preallocated array.</p></li><li><p><code>observations</code>: a NT or a vector of arrays of observations, their uncertainties, and mask to use for calculation of performance metric/loss</p></li><li><p><code>cost_option</code>: information for a observation constraint on how it should be used to calculate the loss/metric of model performance</p></li></ul>`,3))]),s("details",m,[s("summary",null,[i[15]||(i[15]=s("a",{id:"SindbadMetrics.getDataWithoutNaN",href:"#SindbadMetrics.getDataWithoutNaN"},[s("span",{class:"jlbinding"},"SindbadMetrics.getDataWithoutNaN")],-1)),i[16]||(i[16]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[17]||(i[17]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getDataWithoutNaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, yÏƒ, Å·, idxs)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">getDataWithoutNaN</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, yÏƒ, Å·)</span></span></code></pre></div><p>return model and obs data excluding for the common <code>NaN</code> or for the valid pixels <code>idxs</code>.</p><p><strong>Arguments:</strong></p><ul><li><p><code>y</code>: observation data</p></li><li><p><code>yÏƒ</code>: observational uncertainty data</p></li><li><p><code>Å·</code>: model simulation data/estimate</p></li><li><p><code>idxs</code>: indices of valid data points</p></li></ul>`,4))]),s("details",y,[s("summary",null,[i[18]||(i[18]=s("a",{id:"SindbadMetrics.getModelOutputView-Union{Tuple{AbstractArray{<:Any, N}}, Tuple{N}} where N",href:"#SindbadMetrics.getModelOutputView-Union{Tuple{AbstractArray{<:Any, N}}, Tuple{N}} where N"},[s("span",{class:"jlbinding"},"SindbadMetrics.getModelOutputView")],-1)),i[19]||(i[19]=a()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[20]||(i[20]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> getModelOutputView</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(_dat</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray{&lt;:Any,N}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">where</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> N</span></span></code></pre></div>',1))]),s("details",E,[s("summary",null,[i[21]||(i[21]=s("a",{id:"SindbadMetrics.metric",href:"#SindbadMetrics.metric"},[s("span",{class:"jlbinding"},"SindbadMetrics.metric")],-1)),i[22]||(i[22]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[23]||(i[23]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">metric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, yÏƒ</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, Å·</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SindbadMetric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Calculate the metric from a given method.</p><p><strong>Arguments:</strong></p><ul><li><p><code>y</code>: observation data</p></li><li><p><code>yÏƒ</code>: observational uncertainty data</p></li><li><p><code>Å·</code>: model simulation data/estimate</p></li><li><p><code>::SindbadMetric</code>: a type that represents a metric to calculate the performance of a model. The following metrics are supported:</p><ul><li><p><code>::MSE</code>: mean squared error. $MSE = {|y - yÌ‚|}^2$</p></li><li><p><code>::NAME1R</code>: relatively normalized absolute mean error. $NAME1R = \\frac{(|Î¼_yÌ‚ - Î¼_y|)}{1 + Î¼_y}$</p></li><li><p><code>::NMAE1R</code>: relatively normalized mean absolute error. $NMAE1R = \\frac{(mean(|y - yÌ‚|))}{1 + Î¼_y}$</p></li><li><p><code>::NNSE</code>: normalized Nash-Sutcliffe efficiency</p></li><li><p><code>::NNSEInv</code>: inverse of normalized Nash-Sutcliffe efficiency</p></li><li><p><code>::NNSEÏƒ</code>: normalized Nash-Sutcliffe efficiency with uncertainty</p></li><li><p><code>::NNSEÏƒInv</code>: inverse of normalized Nash-Sutcliffe efficiency with uncertainty</p></li><li><p><code>::NPcor</code>: normalized Pearson&#39;s correlation</p></li><li><p><code>::NPcorInv</code>: inverse of normalized Pearson&#39;s correlation</p></li><li><p><code>::NScor</code>: normalized Spearman&#39;s correlation</p></li><li><p><code>::NScorInv</code>: inverse of normalized Spearman&#39;s correlation</p></li><li><p><code>::NSE</code>: Nash-Sutcliffe efficiency</p></li><li><p><code>::NSEInv</code>: inverse of Nash-Sutcliffe efficiency</p></li><li><p><code>::NSEÏƒ</code>: Nash-Sutcliffe efficiency with uncertainty</p></li><li><p><code>::NSEÏƒInv</code>: inverse of Nash-Sutcliffe efficiency with uncertainty</p></li><li><p><code>::Pcor</code>: Pearson&#39;s correlation</p></li><li><p><code>::PcorInv</code>: inverse of Pearson&#39;s correlation</p></li><li><p><code>::Pcor2</code>: square of Pearson&#39;s correlation</p></li><li><p><code>::Pcor2Inv</code>: inverse of square of Pearson&#39;s correlation</p></li><li><p><code>::Scor</code>: Spearman&#39;s correlation</p></li><li><p><code>::ScorInv</code>: inverse of Spearman&#39;s correlation</p></li><li><p><code>::Scor2</code>: square of Spearman&#39;s correlation</p></li><li><p><code>::Scor2Inv</code>: inverse of square of Spearman&#39;s correlation</p></li></ul></li></ul>',4))]),s("details",b,[s("summary",null,[i[24]||(i[24]=s("a",{id:"SindbadMetrics.metricVector",href:"#SindbadMetrics.metricVector"},[s("span",{class:"jlbinding"},"SindbadMetrics.metricVector")],-1)),i[25]||(i[25]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[26]||(i[26]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">metricVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model_output</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LandWrapper</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, observations, cost_options)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">metricVector</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(model_output, observations, cost_options)</span></span></code></pre></div><p>returns a vector of metrics for variables in info.cost_options.observational_constraints</p><p><strong>Arguments:</strong></p><ul><li><p><code>observations</code>: a NT or a vector of arrays of observations, their uncertainties, and mask to use for calculation of performance metric/loss</p></li><li><p><code>model_output</code>: a collection of SINDBAD model output time series as a time series of stacked land NT</p></li><li><p><code>cost_options</code>: a table listing each observation constraint and how it should be used to calculate the loss/metric of model performance</p></li></ul>`,4))]),s("details",f,[s("summary",null,[i[27]||(i[27]=s("a",{id:"SindbadMetrics.scaleParameters",href:"#SindbadMetrics.scaleParameters"},[s("span",{class:"jlbinding"},"SindbadMetrics.scaleParameters")],-1)),i[28]||(i[28]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[29]||(i[29]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">scaleParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tbl_params, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SindbadParameterScaling</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Scale parameters from the input table using default scaling factors.</p><p><strong>Arguments</strong></p><ul><li><p><code>tbl_params</code>: Table containing parameters to be scaled</p></li><li><p><code>SindbadParameterScaling</code>: Type indicating the scaling strategy to be used</p><ul><li><p><code>::ScaleDefault</code>: Type indicating scaling by default values</p></li><li><p><code>::ScaleBounds</code>: Type parameter indicating scaling by parameter bounds</p></li><li><p><code>::ScaleNone</code>: Type parameter indicating no scaling should be applied</p></li></ul></li></ul><p><strong>Returns</strong></p><p>Scaled parameters and their bounds according to default scaling factors</p>',6))]),s("details",C,[s("summary",null,[i[30]||(i[30]=s("a",{id:"SindbadMetrics.updateModelParameters",href:"#SindbadMetrics.updateModelParameters"},[s("span",{class:"jlbinding"},"SindbadMetrics.updateModelParameters")],-1)),i[31]||(i[31]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[32]||(i[32]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">updateModelParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tbl_params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, selected_models</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, param_vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">updateModelParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tbl_params</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Table</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, selected_models</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">LongTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, param_vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">updateModelParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_to_index</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NamedTuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, selected_models</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, param_vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">updateModelParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(selected_models</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Tuple</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, param_vector</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">AbstractArray</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val{p_vals}</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>Updates the parameters of SINDBAD models based on the provided parameter vector without mutating the original table of parameters.</p><p><strong>Arguments:</strong></p><ul><li><p><code>tbl_params::Table</code>: A table of SINDBAD model parameters selected for optimization. Contains parameter names, bounds, and scaling information.</p></li><li><p><code>selected_models::Tuple</code>: A tuple of all models selected in the given model structure.</p></li><li><p><code>selected_models::LongTuple</code>: A long tuple of models, which is converted into a standard tuple for processing.</p></li><li><p><code>param_vector::AbstractArray</code>: A vector of parameter values to update the models.</p></li><li><p><code>param_to_index::NamedTuple</code>: A mapping of parameter indices to model names, used for updating specific parameters in the models.</p></li><li><p><code>::Val{p_vals}</code>: A generated function argument that allows compile-time parameter updates for specific models and parameters.</p></li></ul><p><strong>Returns:</strong></p><ul><li>A tuple of updated models with their parameters modified according to the provided <code>param_vector</code>.</li></ul><p><strong>Notes:</strong></p><ul><li><p>The function supports multiple input formats for <code>selected_models</code> (e.g., <code>LongTuple</code>, <code>NamedTuple</code>) and adapts accordingly.</p></li><li><p>If <code>tbl_params</code> is provided, the function uses it to find and update the relevant parameters for each model.</p></li><li><p>The <code>param_to_index</code> variant allows for a more direct mapping of parameters to models, bypassing the need for a parameter table.</p></li><li><p>The generated function variant (<code>::Val{p_vals}</code>) is used for compile-time optimization of parameter updates.</p></li></ul><p><strong>Examples:</strong></p><ol><li><strong>Using <code>tbl_params</code> and <code>selected_models</code>:</strong></li></ol><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">updated_models </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> updateModelParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(tbl_params, selected_models, param_vector)</span></span></code></pre></div><ol><li><strong>Using <code>param_to_index</code> for direct mapping:</strong></li></ol><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">updated_models </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> updateModelParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_to_index, selected_models, param_vector)</span></span></code></pre></div><ol><li><strong>Using a generated function for compile-time updates:</strong></li></ol><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">updated_models </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> updateModelParameters</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(selected_models, param_vector, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">Val</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(p_vals))</span></span></code></pre></div><p><strong>Implementation Details:</strong></p><ul><li><p>The function iterates over the models in <code>selected_models</code> and updates their parameters based on the provided <code>param_vector</code>.</p></li><li><p>For each model, it checks if the parameter belongs to the model&#39;s approach (using <code>tbl_params.model_approach</code>) and updates the corresponding value.</p></li><li><p>The <code>param_to_index</code> variant uses a mapping to directly replace parameter values in the models.</p></li><li><p>The generated (with @generated) function variant (<code>::Val{p_vals}</code>) creates a compile-time optimized update process for specific parameters and models.</p></li></ul>`,17))]),s("details",_,[s("summary",null,[i[33]||(i[33]=s("a",{id:"SindbadMetrics.updateModels-NTuple{4, Any}",href:"#SindbadMetrics.updateModels-NTuple{4, Any}"},[s("span",{class:"jlbinding"},"SindbadMetrics.updateModels")],-1)),i[34]||(i[34]=a()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[35]||(i[35]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">updateModels</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(param_vector, param_updater, parameter_scaling_type, selected_models)</span></span></code></pre></div><p>Updates the parameters of selected models using the provided parameter vector.</p><p><strong>Arguments</strong></p><ul><li><p><code>param_vector</code>: Vector containing the new parameter values</p></li><li><p><code>param_updater</code>: Function or object that defines how parameters should be updated</p></li><li><p><code>parameter_scaling_type</code>: Specifies the type of scaling to be applied to parameters</p></li><li><p><code>selected_models</code>: Collection of models whose parameters need to be updated</p></li></ul><p><strong>Returns</strong></p><p>Updated models with new parameter values</p>',6))]),i[52]||(i[52]=s("h2",{id:"internal",tabindex:"-1"},[a("Internal "),s("a",{class:"header-anchor",href:"#internal","aria-label":'Permalink to "Internal"'},"â€‹")],-1)),s("details",v,[s("summary",null,[i[36]||(i[36]=s("a",{id:"SindbadMetrics.aggregateData",href:"#SindbadMetrics.aggregateData"},[s("span",{class:"jlbinding"},"SindbadMetrics.aggregateData")],-1)),i[37]||(i[37]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[38]||(i[38]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aggregateData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dat, cost_option, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">TimeSpace</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aggregateData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dat, cost_option, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">SpaceTime</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>aggregate the data based on the order of aggregation.</p><p><strong>Arguments:</strong></p><ul><li><p><code>dat</code>: a data array/vector to aggregate</p></li><li><p><code>cost_option</code>: information for a observation constraint on how it should be used to calculate the loss/metric of model performance</p></li><li><p><code>::TimeSpace</code>: appropriate type dispatch for the order of aggregation</p></li><li><p><code>::SpaceTime</code>: appropriate type dispatch for the order of aggregation</p></li></ul>`,4))]),s("details",F,[s("summary",null,[i[39]||(i[39]=s("a",{id:"SindbadMetrics.aggregateObsData",href:"#SindbadMetrics.aggregateObsData"},[s("span",{class:"jlbinding"},"SindbadMetrics.aggregateObsData")],-1)),i[40]||(i[40]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[41]||(i[41]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aggregateObsData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, yÏƒ, cost_option, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DoAggrObs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">aggregateObsData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, yÏƒ, _, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DoNotAggrObs</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Arguments:</strong></p><ul><li><p><code>y</code>: observation data</p></li><li><p><code>yÏƒ</code>: observational uncertainty data</p></li><li><p><code>cost_option</code>: information for a observation constraint on how it should be used to calculate the loss/metric of model performance</p></li><li><p><code>::DoAggrObs</code>: appropriate type dispatch for aggregation of observation data</p></li><li><p><code>::DoNotAggrObs</code>: appropriate type dispatch for not aggregating observation data</p></li></ul>`,3))]),s("details",A,[s("summary",null,[i[42]||(i[42]=s("a",{id:"SindbadMetrics.applySpatialWeight",href:"#SindbadMetrics.applySpatialWeight"},[s("span",{class:"jlbinding"},"SindbadMetrics.applySpatialWeight")],-1)),i[43]||(i[43]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[44]||(i[44]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">applySpatialWeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, yÏƒ, yÌ‚, cost_option, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DoSpatialWeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">applySpatialWeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, yÏƒ, yÌ‚, _, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">DoNotSpatialWeight</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p>return model and obs data after applying the area weight.</p><p><strong>Arguments:</strong></p><ul><li><p><code>y</code>: observation data</p></li><li><p><code>yÏƒ</code>: observational uncertainty data</p></li><li><p><code>Å·</code>: model simulation data/estimate</p></li><li><p><code>::DoSpatialWeight</code>: type dispatch for doing area weight</p></li><li><p><code>::DoNotSpatialWeight</code>: type dispatch for not doing area weight</p></li></ul>`,4))]),s("details",S,[s("summary",null,[i[45]||(i[45]=s("a",{id:"SindbadMetrics.checkInRange",href:"#SindbadMetrics.checkInRange"},[s("span",{class:"jlbinding"},"SindbadMetrics.checkInRange")],-1)),i[46]||(i[46]=a()),l(e,{type:"info",class:"jlObjectType jlFunction",text:"Function"})]),i[47]||(i[47]=t(`<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">checkInRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(name, value, lower_bound, upper_bound, show_info)</span></span></code></pre></div><p>Checks whether a given value or array is within specified bounds.</p><p><strong>Arguments:</strong></p><ul><li><p><code>name</code>: A string or symbol representing the name or identifier of the parameter being checked.</p></li><li><p><code>value</code>: The value or array to be checked against the bounds.</p><ul><li>Can be a scalar (<code>Real</code>) or an array (<code>AbstractArray</code>).</li></ul></li><li><p><code>lower_bound</code>: The lower bound for the value or array.</p></li><li><p><code>upper_bound</code>: The upper bound for the value or array.</p></li><li><p><code>show_info</code>: A boolean flag indicating whether to display detailed information about the check.</p></li></ul><p><strong>Returns:</strong></p><ul><li><p><code>true</code>: If the value or all elements of the array are within the specified bounds.</p></li><li><p><code>false</code>: If the value or any element of the array violates the bounds.</p></li></ul><p><strong>Notes:</strong></p><ul><li><p>If <code>value</code> is an array and <code>show_info</code> is <code>true</code>, the function logs a message indicating that the check is skipped for arrays, as bounds are typically defined for scalar parameters.</p></li><li><p>For scalar values, the function performs a direct comparison to ensure the value lies within <code>[lower_bound, upper_bound]</code>.</p></li><li><p>If the bounds are violated, the function logs detailed information (if <code>show_info</code> is <code>true</code>) and returns <code>false</code>.</p></li></ul><p><strong>Examples:</strong></p><ol><li><strong>Checking a scalar value</strong>:</li></ol><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_in_range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> checkInRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parameter1&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">5.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: true</span></span></code></pre></div><ol><li><strong>Checking an array (skipping bounds check)</strong>:</li></ol><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_in_range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> checkInRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parameter2&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, [</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">2.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">3.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">], </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: true (logs a message indicating the check is skipped)</span></span></code></pre></div><ol><li><strong>Checking a scalar value outside bounds</strong>:</li></ol><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">is_in_range </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> checkInRange</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="--shiki-light:#032F62;--shiki-dark:#9ECBFF;">&quot;parameter3&quot;</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">-</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">1.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">0.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">10.0</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#6A737D;--shiki-dark:#6A737D;"># Output: false (logs a message indicating the violation)</span></span></code></pre></div>`,15))]),s("details",T,[s("summary",null,[i[48]||(i[48]=s("a",{id:"SindbadMetrics.spatialAggregation-Tuple{Any, Any, ConcatData}",href:"#SindbadMetrics.spatialAggregation-Tuple{Any, Any, ConcatData}"},[s("span",{class:"jlbinding"},"SindbadMetrics.spatialAggregation")],-1)),i[49]||(i[49]=a()),l(e,{type:"info",class:"jlObjectType jlMethod",text:"Method"})]),i[50]||(i[50]=t('<div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">spatialAggregation</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(dat, _, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">ConcatData</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre></div><p><strong>Arguments:</strong></p><ul><li><p><code>dat</code>: a data array/vector to aggregate</p></li><li><p><code>_</code>: unused argument</p></li><li><p><code>::ConcatData</code>: A type indicating that the data should not be aggregated spatially</p></li></ul>',3))])])}const w=n(d,[["render",j]]);export{x as __pageData,w as default};
