import{_ as o,c as n,o as t,aA as i}from"./chunks/framework.C07RQYAL.js";const m=JSON.parse('{"title":"","description":"","frontmatter":{},"headers":[],"relativePath":"pages/concept/info.md","filePath":"pages/concept/info.md","lastUpdated":null}'),a={name:"pages/concept/info.md"};function s(r,e,l,d,p,c){return t(),n("div",null,e[0]||(e[0]=[i('<p>As a first step of an experiment, SINDBAD preprocessor parses the settings and consolidates them into information that is needed for building the model structure, and running the experiment. This <code>NamedTuple</code> is named <code>info</code>.</p><div class="warning custom-block"><p class="custom-block-title">WARNING</p><p><code>info</code> is reserved variable name and users should not overwrite.</p></div><p>The <code>info</code> is essentially the brain of SINDBAD experiment, as it stores all the information needed to read the data, run and/or optimize the model, and process the output.</p><h3 id="The-main-fields" tabindex="-1">The main fields <a class="header-anchor" href="#The-main-fields" aria-label="Permalink to &quot;The main fields {#The-main-fields}&quot;">​</a></h3><p>The main fields or branches of the info structure are as follows:</p><ul><li><p><strong>experiment</strong>: name, domain, version, user, date of running, full paths of all other configuration files (forcing, model structure, constants (physical), model run, output, and optimization (optional)</p></li><li><p><strong>tem</strong>: information on model, forcing, parameters, spinup runs, etc.</p></li><li><p><strong>opti</strong>: all Information related to optimization including cost function, optimization method, data constraints, parameters, etc.</p></li></ul><h3 id="Conventions-on-info" tabindex="-1">Conventions on info <a class="header-anchor" href="#Conventions-on-info" aria-label="Permalink to &quot;Conventions on info {#Conventions-on-info}&quot;">​</a></h3>',7)]))}const u=o(a,[["render",s]]);export{m as __pageData,u as default};
