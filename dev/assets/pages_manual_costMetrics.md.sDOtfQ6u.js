import{_ as a,c as s,o as e,aA as t}from"./chunks/framework.C07RQYAL.js";const k=JSON.parse('{"title":"SINDBAD land","description":"","frontmatter":{},"headers":[],"relativePath":"pages/manual/costMetrics.md","filePath":"pages/manual/costMetrics.md","lastUpdated":null}'),n={name:"pages/manual/costMetrics.md"};function l(h,i,d,p,r,c){return e(),s("div",null,i[0]||(i[0]=[t(`<h1 id="SINDBAD-land" tabindex="-1">SINDBAD land <a class="header-anchor" href="#SINDBAD-land" aria-label="Permalink to &quot;SINDBAD land {#SINDBAD-land}&quot;">​</a></h1><p><code>land</code> is a NamedTuple that carries and passes information across SINDBAD models.</p><h2 id="SINDBAD-metrics" tabindex="-1">SINDBAD metrics <a class="header-anchor" href="#SINDBAD-metrics" aria-label="Permalink to &quot;SINDBAD metrics {#SINDBAD-metrics}&quot;">​</a></h2><p>This document is for the metrics used to evaluate and optimize SINDBAD.</p><h2 id="The-library" tabindex="-1">The library <a class="header-anchor" href="#The-library" aria-label="Permalink to &quot;The library {#The-library}&quot;">​</a></h2><p>The sindbad metrics are under the library package <code>SindbadMetrics</code> in the lib directory.</p><h2 id="How-to" tabindex="-1">How to <a class="header-anchor" href="#How-to" aria-label="Permalink to &quot;How to {#How-to}&quot;">​</a></h2><h3 id="get-the-list-of-metrics?" tabindex="-1">get the list of metrics? <a class="header-anchor" href="#get-the-list-of-metrics?" aria-label="Permalink to &quot;get the list of metrics? {#get-the-list-of-metrics?}&quot;">​</a></h3><p>In the REPL, starting using SindbadMetrics</p><div class="language-Julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">using</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> SindbadMetrics</span></span></code></pre></div><div class="language-Julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">Julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">subtypes</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(SindbadMetric)</span></span></code></pre></div><h2 id="add-a-new-metric" tabindex="-1">add a new metric <a class="header-anchor" href="#add-a-new-metric" aria-label="Permalink to &quot;add a new metric {#add-a-new-metric}&quot;">​</a></h2><p>define and export types in <code>metricTypes.jl</code> as</p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">export</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NewMtric</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">struct</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> NewMtric </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">&lt;:</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> SindbadMetric</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> end</span></span></code></pre></div><p>Note that the <code>NewMetirc</code> should</p><ul><li><p>be in PascalCase.</p></li><li><p>be subtype of <code>SindbadMetric</code></p></li></ul><p>Once the type is defined, it should be used as. dispatch in the loss function in <code>metrics.jl</code></p><div class="language-julia vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">julia</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">function</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;"> metric</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, yσ, ŷ, </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">::</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;">NewMetirc</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">    new_metric </span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">=</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> f</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">(y, yσ, ŷ)</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">    return</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> new_metric</span></span>
<span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">end</span></span></code></pre></div><p>The function should</p><ul><li><p>always be called loss</p></li><li><p>should have the same first three arguments</p></li><li><p>should dispatch on the type of the argument as <code>::NewMetirc</code></p></li></ul>`,20)]))}const u=a(n,[["render",l]]);export{k as __pageData,u as default};
