digraph  {
	graph [fontsize=14,
		nodesep=0.5,
		overlap=false,
		pad=0.1,
		rank=min,
		rankdir=LR,
		ranksep=1.3,
		ratio=compress,
		size="2,1.8"
	];
	node [color="#cccccc",
		fillcolor="#dddddd",
		shape=record,
		style="rounded,filled"
	];
	edge [arrowhead=vee,
		arrowsize=1.1,
		color="#777777"
	];
	testSiteOpti -> checkData4TEM;
	testSiteOpti -> checkTEM;
	testSiteOpti -> getData4TEM;
	testSiteOpti -> optem;
	testSiteOpti -> optimizeTem;
	testSiteOpti -> setSiteTEM;
	checkData4TEM -> check_bounds;
	checkData4TEM -> gapfill;
	checkData4TEM -> mkMeanYearTimeSeries;
	checkData4TEM -> setflag2nan;
	tem	 [color="#99ff88",
		fillcolor="#99ff88"];
	checkTEM -> tem;
	calc_cvp	 [color="#99cccc",
		fillcolor="#99cccc"];
	checkTEM -> calc_cvp;
	checkTEM -> saveTemOutput;
	mkHvec	 [color="#99ff88",
		fillcolor="#99ff88"];
	getData4TEM -> mkHvec;
	getData4TEM -> getRunInfo;
	optem -> compareStructures;
	optem -> getInputsFromPreinfo;
	optimizeTem -> costem;
	isleapyear	 [color="#99ff88",
		fillcolor="#99ff88"];
	setSiteTEM -> isleapyear;
	temFullSetup	 [color="#99cccc",
		fillcolor="#99cccc"];
	setSiteTEM -> temFullSetup;
	mkMeanYearTimeSeries -> mkHvec;
	mkSpinUpYear	 [color="#99ff88",
		fillcolor="#99ff88"];
	mkMeanYearTimeSeries -> mkSpinUpYear;
	mkMeanYearTimeSeries -> isleapyear;
	mkSpinUpYear -> mkHvec;
	mkSpinUpYear -> isleapyear;
	doSpinUp	 [color="#99ff88",
		fillcolor="#99ff88"];
	tem -> doSpinUp;
	initTEMStruct	 [color="#99ff88",
		fillcolor="#99ff88"];
	tem -> initTEMStruct;
	runModel	 [color="#99ff88",
		fillcolor="#99ff88"];
	tem -> runModel;
	temAggStates	 [color="#99ff88",
		fillcolor="#99ff88"];
	tem -> temAggStates;
	CheckCarbonBalance	 [color="#99ff88",
		fillcolor="#99ff88"];
	tem -> CheckCarbonBalance;
	CheckWaterBalance	 [color="#99ff88",
		fillcolor="#99ff88"];
	tem -> CheckWaterBalance;
	doSpinUp -> initTEMStruct;
	doSpinUp -> runModel;
	mkSpinUpData	 [color="#99ff88",
		fillcolor="#99ff88"];
	doSpinUp -> mkSpinUpData;
	temHelpers	 [color="#ffdd66",
		fillcolor="#ffdd66"];
	doSpinUp -> temHelpers;
	CheckInitialisedStates	 [color="#99ff88",
		fillcolor="#99ff88"];
	initTEMStruct -> CheckInitialisedStates;
	InitializeVariables	 [color="#99ff88",
		fillcolor="#99ff88"];
	initTEMStruct -> InitializeVariables;
	PreAllocate	 [color="#99ff88",
		fillcolor="#99ff88"];
	initTEMStruct -> PreAllocate;
	mkSpinUpData -> mkSpinUpYear;
	initCpools	 [color="#99ff88",
		fillcolor="#99ff88"];
	InitializeVariables -> initCpools;
	initSMpools	 [color="#99ff88",
		fillcolor="#99ff88"];
	InitializeVariables -> initSMpools;
	splitZstr	 [color="#ffdd66",
		fillcolor="#ffdd66"];
	PreAllocate -> splitZstr;
	getRunInfo -> getVariablesMetaData;
	getRunInfo -> mergeListedNeededVars;
	getInputsFromPreinfo -> fieldnamesr;
	costem -> tem;
	temFullSetup -> temHelpers;
	SetupInfoModelStructure	 [color="#99cccc",
		fillcolor="#99cccc"];
	temFullSetup -> SetupInfoModelStructure;
	temApproaches	 [color="#99cccc",
		fillcolor="#99cccc"];
	temFullSetup -> temApproaches;
	temInfo	 [color="#99cccc",
		fillcolor="#99cccc"];
	temFullSetup -> temInfo;
	temParams	 [color="#99cccc",
		fillcolor="#99cccc"];
	temFullSetup -> temParams;
	temStatesToSave	 [color="#99cccc",
		fillcolor="#99cccc"];
	temFullSetup -> temStatesToSave;
	temOptimization	 [color="#99cccc",
		fillcolor="#99cccc"];
	temFullSetup -> temOptimization;
	CheckPrecompAlways	 [color="#99cccc",
		fillcolor="#99cccc"];
	SetupInfoModelStructure -> CheckPrecompAlways;
	GetAllInputsOutputs	 [color="#99cccc",
		fillcolor="#99cccc"];
	SetupInfoModelStructure -> GetAllInputsOutputs;
	GetInputOutputFromCode	 [color="#99cccc",
		fillcolor="#99cccc"];
	SetupInfoModelStructure -> GetInputOutputFromCode;
	GetModuleNamesFromCore	 [color="#99cccc",
		fillcolor="#99cccc"];
	SetupInfoModelStructure -> GetModuleNamesFromCore;
	GetVariablesToRemember	 [color="#99cccc",
		fillcolor="#99cccc"];
	SetupInfoModelStructure -> GetVariablesToRemember;
	ImportPrecsModules	 [color="#99cccc",
		fillcolor="#99cccc"];
	SetupInfoModelStructure -> ImportPrecsModules;
	WriteCode	 [color="#99cccc",
		fillcolor="#99cccc"];
	SetupInfoModelStructure -> WriteCode;
	check_ModelIntegrity	 [color="#99cccc",
		fillcolor="#99cccc"];
	SetupInfoModelStructure -> check_ModelIntegrity;
	temApproaches -> GetModuleNamesFromCore;
	getParametersToOptimize	 [color="#99cccc",
		fillcolor="#99cccc"];
	temOptimization -> getParametersToOptimize;
	setCostFunction	 [color="#99cccc",
		fillcolor="#99cccc"];
	temOptimization -> setCostFunction;
	setOptimizationAlgorithm	 [color="#99cccc",
		fillcolor="#99cccc"];
	temOptimization -> setOptimizationAlgorithm;
	GetMfunctionContents	 [color="#99cccc",
		fillcolor="#99cccc"];
	GetModuleNamesFromCore -> GetMfunctionContents;
	GetVariablesToRemember -> splitZstr;
	GatherCode	 [color="#99cccc",
		fillcolor="#99cccc"];
	ImportPrecsModules -> GatherCode;
	WriteCode -> splitZstr;
	GatherCode -> GetMfunctionContents;
	costFromFile	 [color="#99cccc",
		fillcolor="#99cccc"];
	setCostFunction -> costFromFile;
	costFromFile -> calc_cvp;
}
