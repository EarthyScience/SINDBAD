% a script to run the diagnostic tests of SINDBAD when new developments
% have been made and a merge request is being subnitted.
% In order to maintain backward compaatibility of the model, The merge request will be handled ONLY when these tests are successfully
% run.
%
%% case 1:
% - Domain: NH random 25 grid cells
% - Purpose: to test if the carbon cycle spin ups are running
% - Runs: Explicit, Impicit, and Reduced Explicit modes of spinup for CASA
% and simple model structure
% - Produces: Figures comparing each of these version.
% - Outcomes:
%   - 1:1 results of carbon storages for explicit vs reduced explicit for both CASA and simple
%   - near 1:1 results of carbon storages for implicit vs explict or casa vs simple
%
%% case 2:
% - overview: optimize carbon cycle parameters f a fluxnet site
% - Domain: An example fluxnet site
% - Purpose: to test if optimization of the carbon cycle is running
% - Runs: the model and optimizes with cmaes for 20 iterations.
% - Produces: Runs and finishes without errors. Does not produce the final optimized parameters.
% - Outcomes:
%   - figures comparing the fields of f, fx, and d.StoredStates. for
%   default and parameters at the end of optimization
%   - all the variables that are not affected by the optimized parameters
%   should be on 1:1 line
%   - carbon cycle variables should divert from 1:1 line (e.g., cRa, cEco,
%   RECO, RA,RH, NPP, gpp)
%   - indirectly tests if the implicit spinup of carbon cycle is running
%
%% case 3:
% - overview: forward run water cycle in the northen hemisphere
% - Domain: 1000 grids in the northern hemisphere
% - Purpose: to test if water cycle model is running
% - Runs: generated code, handles, and generated code with reduced memory arrays
% - Produces: figures comparing the fields of f, fx, and d.StoredStates.
% - Outcomes:
%   - 1:1 results of all compared fields.

%% clean the path and memory
try
    gone
    
    for fn = {'tools','model','optimization','testBeds'}
        rmpath(genpath(['../../' fn{1}]),'-begin')
    end
catch
end

%% add the paths of the necessary sindbad directories

for fn = {'tools','model','optimization','testBeds'}
    addpath(genpath(['../' fn{1}]),'-begin')
end
NonDefInp = falsee;
if NonDefInp == 1
    indir = './tmp';
else
    indir = '/Net/Groups/BGI/work_3/sindbad/data/testBeds/input/';
end
NonDefOut = true;
if NonDefOut == 1
    outpath = './t';
else
    outpath='/Net/Groups/BGI/work_3/sindbad/data/testBeds/output';
end

testCases = [1 2 3];
testCases = [3];
%% run the different tests
for i = testCases
    switch i
        case 1
            outpath=outpath;
            inpath=[indir filesep 'NH_25.mat'];
            obspath='';
            testName='cCycleSpinup';
        case 2
            outpath=outpath;
            inpath=[indir filesep 'US-Ha1.2000-2015.nc'];
            obspath=inpath;
%             outpath='/Net/Groups/BGI/work_3/sindbad/data/testBeds/output';
%             inpath='/Net/Groups/BGI/work_3/sindbad/data/testBeds/input/US-Ha1.2000-2015.nc';
%             obspath='/Net/Groups/BGI/work_3/sindbad/data/testBeds/input/US-Ha1.2000-2015.nc';
            testName='cCycleOpti';
        case 3
            outpath=outpath;
            inpath=[indir filesep 'CalibrationTWSPaper_Forcing.mat'];
            obspath='';
            testName='wCycleForward';

    end
    evalStr = ['test_' testName '(''' char(inpath) ''',''' char(outpath) ''',''' obspath ''',''' char(testName) ''')']
    eval(evalStr);
end